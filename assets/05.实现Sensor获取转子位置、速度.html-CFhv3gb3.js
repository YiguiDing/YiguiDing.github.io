import{_ as o,c,d as l,w as a,a as n,b as i,r as u,o as r,e as s}from"./app-DjDtDPYL.js";const k="/assets/image-3-CZwT_-HN.png",d="/assets/image-4-2moESGAR.png",m="/assets/image-5-DPgp8uDT.png",v={},b=n("h2",{id:"_05-实现sensor获取转子位置、速度",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_05-实现sensor获取转子位置、速度"},[n("span",null,"05.实现Sensor获取转子位置、速度")])],-1),y=n("h3",{id:"具体实现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#具体实现"},[n("span",null,"具体实现")])],-1),_=n("code",null,"Sensor.cpp",-1),h=n("code",null,"Sensor.hpp",-1),w=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Sensor.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"BLDCMotor.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Arduino.h"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Sensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_initSensorl"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_readSensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("_initSensor "),n("span",{class:"token operator"},"="),s(" _initSensorl"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("_readSensor "),n("span",{class:"token operator"},"="),s(" _readSensor"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"initSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_initSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"readSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_readSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"connectMotor"),n("span",{class:"token punctuation"},"("),s("BLDCMotor "),n("span",{class:"token operator"},"*"),s("motor"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("motor "),n("span",{class:"token operator"},"="),s(" motor"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"alignSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("motor"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("motor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0.2"),s(),n("span",{class:"token operator"},"*"),s(" INT16_MAX"),n("span",{class:"token punctuation"},","),s(" _3_PI_2_"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// -90°位置施加磁场")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"delay"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"500"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("offset "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_readSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("motor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"update"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ####################################")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 1.记录当前值")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev_angle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev_full_rotations "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("full_rotations"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ####################################")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 2.更新")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ----更新角度")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_readSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ----更新圈数")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int32_t"),s(" d_angle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev_angle"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"abs"),n("span",{class:"token punctuation"},"("),s("d_angle"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0.8"),s(),n("span",{class:"token operator"},"*"),s(" _2PI_"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("full_rotations "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token punctuation"},"("),s("d_angle "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 圈数自增/自减")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ####################################")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 3.计算")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ----计算位置")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("position "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("offset"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ----计算位置(带圈数)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("positions "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("full_rotations "),n("span",{class:"token operator"},"*"),s(" _2PI_ "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("offset"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ----计算速度(rad/ms)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("velocity "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("full_rotations "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev_full_rotations"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"*"),s(" _2PI_ "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("angle "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev_angle"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token function"},"dt_ms"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// ####################################")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 获取位置"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"getPositon"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("position"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 获取位置(带圈数)"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"int32_t"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"getPositons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("positions"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 获取速度"),s(`
`),n("span",{class:"line"}," * 单位: rad/ms"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"int32_t"),s(),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"getVelocity"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("velocity"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),s(),n("span",{class:"token expression"},"_Sensor_H_")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_Sensor_H_")])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<stdint.h>")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Timer.hpp"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Sensor"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token base-clause"},[n("span",{class:"token class-name"},"Timer")]),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_initSensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_readSensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("  BLDCMotor "),n("span",{class:"token operator"},"*"),s("motor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(" offset "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(" angle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(" prev_angle "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(" full_rotations "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(" prev_full_rotations "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(" position "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(" positions "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(" velocity "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token class-name"},"Sensor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"Sensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("initSensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("readSensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"connectMotor"),n("span",{class:"token punctuation"},"("),s("BLDCMotor "),n("span",{class:"token operator"},"*"),s("motor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"initSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token function"},"readSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"alignSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"update"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token function"},"getPositon"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(),n("span",{class:"token function"},"getPositons"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"int32_t"),s(),n("span",{class:"token function"},"getVelocity"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=i('<h3 id="实现效果" tabindex="-1"><a class="header-anchor" href="#实现效果"><span>实现效果</span></a></h3><p><strong>位置（不带圈数）</strong><br><img src="'+k+'" alt="alt text"></p><p><strong>位置（带圈数）</strong></p><p><img src="'+d+'" alt="alt text"></p><p><strong>速度（rad/ms）</strong></p><p><img src="'+m+`" alt="alt text"></p><p><code>05.sensor.ino</code></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;BLDCMotor.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;BLDCDriver.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;Sensor.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;foc_utils.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;typedef.h&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600</span></span></span>
<span class="line"><span class="token comment">// #define AS5047P</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">AS5600</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_ADDR</span> <span class="token expression"><span class="token number">0x36</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_RAW_ANGLE</span> <span class="token expression"><span class="token number">0x0c</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_ANGLE</span> <span class="token expression"><span class="token number">0x0e</span></span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression">defined AS5047P</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;AS5047P.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5047P_CHIP_SELECT_PORT</span> <span class="token expression"><span class="token number">9</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5047P_CUSTOM_SPI_BUS_SPEED</span> <span class="token expression"><span class="token number">100000</span></span></span></span>
<span class="line">AS5047P as5047p <span class="token operator">=</span> <span class="token function">AS5047P</span><span class="token punctuation">(</span>AS5047P_CHIP_SELECT_PORT<span class="token punctuation">,</span> AS5047P_CUSTOM_SPI_BUS_SPEED<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line">Sensor <span class="token operator">*</span>sensor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Sensor</span><span class="token punctuation">(</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">AS5600</span></span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>AS5600_ADDR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>AS5600_ANGLE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">requestFrom</span><span class="token punctuation">(</span>AS5600_ADDR<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">uint16_t</span> data <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>data <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>data <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// as5600 12bit精度，左移4位变成16位</span></span>
<span class="line">      data <span class="token operator">&lt;&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression">defined AS5047P</span></span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>AS5047P_CHIP_SELECT_PORT<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      as5047p<span class="token punctuation">.</span><span class="token function">initSPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>AS5047P_CHIP_SELECT_PORT<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 14bit精度 左移2位变成16位</span></span>
<span class="line">      <span class="token keyword">uint16_t</span> data <span class="token operator">=</span> as5047p<span class="token punctuation">.</span><span class="token function">readAngleRaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>AS5047P_CHIP_SELECT_PORT<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  sensor<span class="token operator">-&gt;</span><span class="token function">initSensor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uint8_t</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  sensor<span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">++</span>idx <span class="token operator">%=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>sensor<span class="token operator">-&gt;</span><span class="token function">readSensor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>sensor<span class="token operator">-&gt;</span><span class="token function">getPositon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>sensor<span class="token operator">-&gt;</span><span class="token function">getPositons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>sensor<span class="token operator">-&gt;</span><span class="token function">getVelocity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function g(E,A){const p=u("CodeTabs");return r(),c("div",null,[b,y,l(p,{id:"6",data:[{id:"<code v-pre>Sensor.cpp</code>"},{id:"<code v-pre>Sensor.hpp</code>"}]},{title0:a(({value:e,isActive:t})=>[_]),title1:a(({value:e,isActive:t})=>[h]),tab0:a(({value:e,isActive:t})=>[w]),tab1:a(({value:e,isActive:t})=>[f]),_:1}),S])}const x=o(v,[["render",g],["__file","05.实现Sensor获取转子位置、速度.html.vue"]]),B=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/05.%E5%AE%9E%E7%8E%B0Sensor%E8%8E%B7%E5%8F%96%E8%BD%AC%E5%AD%90%E4%BD%8D%E7%BD%AE%E3%80%81%E9%80%9F%E5%BA%A6.html","title":"05.实现Sensor获取转子位置、速度","lang":"zh-CN","frontmatter":{"title":"05.实现Sensor获取转子位置、速度","date":"2024-09-20T15:23:00.000Z","index":true,"article":false,"order":5,"description":"05.实现Sensor获取转子位置、速度 具体实现 实现效果 位置（不带圈数） alt text 位置（带圈数） alt text 速度（rad/ms） alt text 05.sensor.ino","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/05.%E5%AE%9E%E7%8E%B0Sensor%E8%8E%B7%E5%8F%96%E8%BD%AC%E5%AD%90%E4%BD%8D%E7%BD%AE%E3%80%81%E9%80%9F%E5%BA%A6.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"05.实现Sensor获取转子位置、速度"}],["meta",{"property":"og:description","content":"05.实现Sensor获取转子位置、速度 具体实现 实现效果 位置（不带圈数） alt text 位置（带圈数） alt text 速度（rad/ms） alt text 05.sensor.ino"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:46:49.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-09-20T15:23:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"05.实现Sensor获取转子位置、速度\\",\\"description\\":\\"05.实现Sensor获取转子位置、速度 具体实现 实现效果 位置（不带圈数） alt text 位置（带圈数） alt text 速度（rad/ms） alt text 05.sensor.ino\\"}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"05.实现Sensor获取转子位置、速度","slug":"_05-实现sensor获取转子位置、速度","link":"#_05-实现sensor获取转子位置、速度","children":[{"level":3,"title":"具体实现","slug":"具体实现","link":"#具体实现","children":[]},{"level":3,"title":"实现效果","slug":"实现效果","link":"#实现效果","children":[]}]}],"git":{"createdTime":1726821356000,"updatedTime":1733147209000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":4}]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"电子/FOC算法实现过程记录/05.实现Sensor获取转子位置、速度.md","localizedDate":"2024年9月20日","excerpt":"","autoDesc":true}');export{x as comp,B as data};
