import{_ as s,c as a,e as n,o as t}from"./app-Dh8phwbL.js";const l={};function e(h,i){return t(),a("div",null,i[0]||(i[0]=[n(`<h2 id="arduino-api编程语言" tabindex="-1"><a class="header-anchor" href="#arduino-api编程语言"><span>Arduino API编程语言</span></a></h2><blockquote><p><a href="https://docs.arduino.cc/learn/starting-guide/getting-started-arduino/#main-parts" target="_blank" rel="noopener noreferrer">https://docs.arduino.cc/learn/starting-guide/getting-started-arduino/#main-parts</a></p></blockquote><blockquote><p>Arduino API，又名“Arduino 编程语言”，由基于 C/C++ 语言的几个函数、变量和结构组成。</p></blockquote><h3 id="主要部件" tabindex="-1"><a class="header-anchor" href="#主要部件"><span>主要部件</span></a></h3><p>Arduino API 可以分为三个主要部分：函数、变量和结构：</p><ul><li>函数： 用于控制 Arduino 板并执行计算。例如，读取或写入数字引脚的状态、映射值或使用串行通信。</li><li>变量： Arduino 常量、数据类型和转换。例如int，boolean，array。</li><li>结构： Arduino（C++）代码的元素，例如 <ul><li>草图（<code>loop()</code>，<code>setup()</code>）</li><li>控制结构（<code>if</code>，<code>else</code>，<code>while</code>，<code>for</code>）</li><li>算术运算符（乘法、加法、减法）</li><li>比较运算符，例如==（等于），!=（不等于），&gt;（大于）。</li></ul></li></ul><p>Arduino API 可以说是 <strong>C++ 编程语言的简化</strong>，其中添加了许多用于控制 Arduino 硬件的功能。</p><h3 id="程序结构" tabindex="-1"><a class="header-anchor" href="#程序结构"><span>程序结构</span></a></h3><p>Arduino 程序的绝对最低要求是使用两个函数：</p><ul><li><code>void setup()</code><ul><li>此函数仅在 Arduino 通电时执行一次。</li><li>在这里我们定义诸如引脚的模式（输入或输出）、串行通信的波特率或库的初始化等内容。</li></ul></li><li><code>void loop()</code> “void” 表示执行时不返回任何内容。 <ul><li>这是我们编写想要反复执行的代码的地方，例如根据输入打开/关闭灯，或者每隔 X 秒进行一次传感器读数。</li></ul></li></ul><h3 id="sketch草图" tabindex="-1"><a class="header-anchor" href="#sketch草图"><span>Sketch草图</span></a></h3><ul><li>在 Arduino 项目中，程序被称为“草图”。草图是您在里面编写程序的文件。</li><li><strong>它具有.ino扩展名，并始终存储在同名文件夹中。</strong></li><li>该文件夹可以包含其他文件，例如可包含在草图中的头文件。</li></ul><p>示例草图</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#4c4f69;--shiki-dark:#E6E6E6;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes catppuccin-latte slack-dark vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> sensorPin </span><span style="--shiki-light:#179299;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> A1</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">;</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //define pin A1 (analog pin)</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> ledPin </span><span style="--shiki-light:#179299;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#FE640B;--shiki-dark:#B5CEA8;"> 2</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">;</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //define pin 2 (digital pin)</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#569CD6;">int</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> sensorValue</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">;</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //create variable for storing readings</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">//void setup is for configurations on start up</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#569CD6;">void</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;"> setup</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> </span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#9CDCFE;">    Serial</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">begin</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#FE640B;--shiki-dark:#B5CEA8;">9600</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //initialize serial communication</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">    pinMode</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">ledPin</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> OUTPUT</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //define ledPin as an output</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#569CD6;">void</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;"> loop</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">()</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">    sensorValue </span><span style="--shiki-light:#179299;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;"> analogRead</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">sensorPin</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> // do a sensor reading</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">    </span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#9CDCFE;">    Serial</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">print</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#40A02B;--shiki-dark:#CE9178;">&quot;Sensor value is: &quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //print a message to the serial monitor</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#9CDCFE;">    Serial</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">println</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">sensorValue</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //print the value to the serial monitor</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">    </span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">    //check if sensorValue is below 200</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#C586C0;">    if</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">sensorValue </span><span style="--shiki-light:#179299;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#FE640B;--shiki-dark:#B5CEA8;"> 200</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> </span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">        digitalWrite</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">ledPin</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> HIGH</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> //if it is, turn on the LED on pin 2.</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">    //if sensorValue is above 200, turn off the LED</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#C586C0;">    else</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">{</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> </span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#DCDCAA;--shiki-dark-font-style:inherit;">        digitalWrite</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;">ledPin</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">,</span><span style="--shiki-light:#4C4F69;--shiki-dark:#E6E6E6;"> LOW</span><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#E6E6E6;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="库" tabindex="-1"><a class="header-anchor" href="#库"><span>库</span></a></h3><p>Arduino 库是标准 Arduino API 的扩展，包含数千个库，包括官方的和社区贡献的。</p><p>库简化了原本复杂的代码的使用，例如读取特定传感器、控制电机或连接到互联网。</p><p>您不必自己编写所有这些代码，只需安装一个库，将其包含在代码顶部，然后使用它的任何可用功能即可。</p><p>所有 Arduino 库都是开源的，任何人都可以免费使用。</p><p>要使用库，您需要将其包含在代码顶部，如下例所示：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#4c4f69;--shiki-dark:#E6E6E6;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes catppuccin-latte slack-dark vp-code"><code class="language-c"><span class="line"><span style="--shiki-light:#DF8E1D;--shiki-dark:#C586C0;">#include</span><span style="--shiki-light:#40A02B;--shiki-dark:#CE9178;"> &lt;Library.h&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="核心特定-api" tabindex="-1"><a class="header-anchor" href="#核心特定-api"><span>核心特定 API</span></a></h3><ul><li>每块 Arduino 开发板都需要一个“核心”或“软件包”，需要安装后才能进行编程。</li><li>所有软件包都包含标准 Arduino API，但也包含只能用于特定开发板的特定 API。</li></ul><h3 id="典型工作流程" tabindex="-1"><a class="header-anchor" href="#典型工作流程"><span>典型工作流程</span></a></h3><p>要使用 IDE 将代码上传到 Arduino 开发板，通常执行以下操作：</p><ol><li><strong>安装您的主板</strong>- 这意味着为您的主板安装正确的“软件包”。没有软件包，您根本无法使用您的主板。安装直接在 IDE 中完成，操作快速简便。</li><li>创建新的草图- 草图是您的主程序文件。在这里，我们编写一组要在微控制器上执行的指令。</li><li>编译你的代码- 我们编写的代码与上传到 Arduino 时看起来并不完全一样：编译代码意味着我们会检查代码中的错误，并将其转换为二进制文件（1 和 0）。如果出现故障，你会在错误控制台中看到此信息。</li><li>上传您的草图- 编译成功后，代码即可上传到您的主板。在此步骤中，我们将主板物理连接到计算机，并选择正确的串行端口。</li><li>串行监视器（可选） - 对于大多数 Arduino 项目来说，了解主板上的情况非常重要。所有 IDE 中提供的串行监视器工具允许将数据从主板发送到计算机。</li></ol>`,26)]))}const k=s(l,[["render",e]]),p=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/Arduino%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Arduino%20API%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html","title":"Arduino学习笔记：Arduino API编程语言","lang":"zh-CN","frontmatter":{"title":"Arduino学习笔记：Arduino API编程语言","shortTitle":"Arduino API编程语言","date":"2024-09-15T20:22:00.000Z","article":false,"index":true,"description":"Arduino API编程语言 https://docs.arduino.cc/learn/starting-guide/getting-started-arduino/#main-parts Arduino API，又名“Arduino 编程语言”，由基于 C/C++ 语言的几个函数、变量和结构组成。 主要部件 Arduino API 可以分为三个主...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Arduino学习笔记：Arduino API编程语言\\",\\"description\\":\\"Arduino API编程语言 https://docs.arduino.cc/learn/starting-guide/getting-started-arduino/#main-parts Arduino API，又名“Arduino 编程语言”，由基于 C/C++ 语言的几个函数、变量和结构组成。 主要部件 Arduino API 可以分为三个主...\\"}"],["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/Arduino%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Arduino%20API%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"Arduino学习笔记：Arduino API编程语言"}],["meta",{"property":"og:description","content":"Arduino API编程语言 https://docs.arduino.cc/learn/starting-guide/getting-started-arduino/#main-parts Arduino API，又名“Arduino 编程语言”，由基于 C/C++ 语言的几个函数、变量和结构组成。 主要部件 Arduino API 可以分为三个主..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-25T05:38:40.000Z"}],["meta",{"property":"article:published_time","content":"2024-09-15T20:22:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-25T05:38:40.000Z"}],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"git":{"createdTime":1726706188000,"updatedTime":1732513120000,"contributors":[{"name":"YiguiDing","username":"YiguiDing","email":"2449695354@qq.com","commits":2,"url":"https://github.com/YiguiDing"}]},"readingTime":{"minutes":3.56,"words":1067},"filePathRelative":"电子/Arduino学习笔记/Arduino API编程语言.md","excerpt":"","autoDesc":true}');export{k as comp,p as data};
