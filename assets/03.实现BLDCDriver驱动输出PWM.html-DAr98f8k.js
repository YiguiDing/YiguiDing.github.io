import{_ as c,c as l,d as i,w as a,b as p,r as u,o as r,a as n,e as s}from"./app-DjDtDPYL.js";const k="/assets/image-2-D1HVJNl0.png",d={},v=p('<h2 id="_03-实现bldcdriver驱动输出pwm" tabindex="-1"><a class="header-anchor" href="#_03-实现bldcdriver驱动输出pwm"><span>03.实现BLDCDriver驱动输出PWM</span></a></h2><p>确切来说是实现了一个接口，需要外部提供三个函数</p><ul><li><code>_initDriver</code> 初始化驱动</li><li><code>_enableDriver</code> 启用/禁用驱动</li><li><code>_setPhraseVoltage</code> 设置三相电压</li><li>因为这三个函数的具体实现都是和硬件相关的，</li><li>在不同硬件上（如stm32或arduino）会有不同的实现方式</li></ul><p><strong>具体实现</strong></p>',4),m=n("code",null,"BLDCDriver.cpp",-1),b=n("code",null,"BLDCDriver.hpp",-1),_=n("code",null,"BLDCMotor.cpp",-1),y=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"BLDCDriver.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Arduino.h"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token class-name"},"BLDCDriver"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"BLDCDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_initDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("                       "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_enableDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"bool"),s(" enable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("                       "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_setPhraseVoltage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("_initDriver "),n("span",{class:"token operator"},"="),s(" _initDriver"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("_enableDriver "),n("span",{class:"token operator"},"="),s(" _enableDriver"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("_setPhraseVoltage "),n("span",{class:"token operator"},"="),s(" _setPhraseVoltage"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCDriver"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"initDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_initDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCDriver"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"enableDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"bool"),s(" enable"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_enableDriver"),n("span",{class:"token punctuation"},"("),s("enable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 设置相电压"),s(`
`),n("span",{class:"line"}," * @param u_a int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCDriver"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_c"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"_setPhraseVoltage"),n("span",{class:"token punctuation"},"("),s("u_a"),n("span",{class:"token punctuation"},","),s(" u_b"),n("span",{class:"token punctuation"},","),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),s(),n("span",{class:"token expression"},"__BLDCDriver_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"__BLDCDriver_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<stdint.h>")])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BLDCDriver")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_initDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_enableDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"bool"),s(" enable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_setPhraseVoltage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"BLDCDriver"),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_initDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_enableDriver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"bool"),s(" enable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_setPhraseVoltage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"initDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"enableDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"bool"),s(" enable"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"HardwareSerial.h"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"BLDCMotor.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Arduino.h"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"BLDCMotor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"connectDriver"),n("span",{class:"token punctuation"},"("),s("BLDCDriver "),n("span",{class:"token operator"},"*"),s("driver"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver "),n("span",{class:"token operator"},"="),s(" driver"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"initFOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"initDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"enableDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 设置相电压"),s(`
`),n("span",{class:"line"}," * @param u_d int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"}," * @param u_q int16_t [-32768,32767] 表示 [-1,1]"),s(`
`),n("span",{class:"line"}," * @param e_angle uint16_t [0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549°"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_d"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_q"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"uint16_t"),s(" e_angle"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" sin"),n("span",{class:"token punctuation"},","),s(" cos"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 计算三角函数")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"_sincos"),n("span",{class:"token punctuation"},"("),s("e_angle"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("sin"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("cos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 帕克逆变换")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_alpha "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("cos "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_d"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("sin "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_q"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" _INT16_ONE_"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_beta "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("sin "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_d"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("cos "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_q"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" _INT16_ONE_"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 克拉克逆变换(等幅值形式)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_a "),n("span",{class:"token operator"},"="),s(" u_alpha"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_b "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("u_alpha "),n("span",{class:"token operator"},"+"),s(" _INT16_SQRT3_ "),n("span",{class:"token operator"},"*"),s(" u_beta "),n("span",{class:"token operator"},"/"),s(" _INT16_ONE_"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_c "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),s("u_a "),n("span",{class:"token operator"},"+"),s(" u_b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 设置相电压")]),s(`
`),n("span",{class:"line"},[s("    driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),s("u_a"),n("span",{class:"token punctuation"},","),s(" u_b"),n("span",{class:"token punctuation"},","),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=p('<p><strong>实现效果</strong></p><p><img src="'+k+`" alt="alt text"></p><p><code>03.bldc_driver_output_pwm</code></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;BLDCMotor.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;foc_utils.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;typedef.h&quot;</span></span></span>
<span class="line"></span>
<span class="line">BLDCMotor motor <span class="token operator">=</span> <span class="token function">BLDCMotor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">BLDCDriver driver <span class="token operator">=</span> <span class="token function">BLDCDriver</span><span class="token punctuation">(</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_En</span> <span class="token expression"><span class="token number">8</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Ua</span> <span class="token expression"><span class="token number">5</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Ub</span> <span class="token expression"><span class="token number">9</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Uc</span> <span class="token expression"><span class="token number">6</span></span></span></span>
<span class="line">    <span class="token comment">// init driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>M1_En<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// enable</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>M1_Ua<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>M1_Ub<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>M1_Uc<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// c</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// enable or disable driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">bool</span> enable<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>M1_En<span class="token punctuation">,</span> enable <span class="token operator">?</span> HIGH <span class="token operator">:</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// enable</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// set pwm to driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int16_t</span> u_a<span class="token punctuation">,</span> <span class="token keyword">int16_t</span> u_b<span class="token punctuation">,</span> <span class="token keyword">int16_t</span> u_c<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// [-32768,32767] =&gt; [0,255]</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_a <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_b <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_c <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// [-32768,32767] =&gt; [0,255]</span></span>
<span class="line">      <span class="token comment">// 大多数引脚上的 PWM 信号频率约为490 Hz</span></span>
<span class="line">      <span class="token comment">// 设置占空比</span></span>
<span class="line">      <span class="token function">analogWrite</span><span class="token punctuation">(</span>M1_Ua<span class="token punctuation">,</span> <span class="token punctuation">(</span>u_a <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">analogWrite</span><span class="token punctuation">(</span>M1_Ub<span class="token punctuation">,</span> <span class="token punctuation">(</span>u_b <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">analogWrite</span><span class="token punctuation">(</span>M1_Uc<span class="token punctuation">,</span> <span class="token punctuation">(</span>u_c <span class="token operator">+</span> _INT16_N_ONE_<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">connectDriver</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">initFOC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uint64_t</span> t1_us<span class="token punctuation">,</span> t2_us <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dt_us<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">uint64_t</span> <span class="token function">dt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 微妙us 70分钟溢出一次</span></span>
<span class="line">  t1_us <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  dt_us <span class="token operator">=</span> t2_us <span class="token operator">-</span> t1_us<span class="token punctuation">;</span></span>
<span class="line">  t2_us <span class="token operator">=</span> t1_us<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 大于1s 返回 0.1ms</span></span>
<span class="line">  <span class="token keyword">return</span> dt_us <span class="token operator">&gt;</span> <span class="token number">1000000</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">:</span> dt_us<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">float</span> angle <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  angle <span class="token operator">+=</span> <span class="token number">1000</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">setPhraseVoltage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> _INT16_ONE_<span class="token punctuation">,</span> angle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(f,B){const o=u("CodeTabs");return r(),l("div",null,[v,i(o,{id:"36",data:[{id:"<code v-pre>BLDCDriver.cpp</code>"},{id:"<code v-pre>BLDCDriver.hpp</code>"},{id:"<code v-pre>BLDCMotor.cpp</code>"}]},{title0:a(({value:e,isActive:t})=>[m]),title1:a(({value:e,isActive:t})=>[b]),title2:a(({value:e,isActive:t})=>[_]),tab0:a(({value:e,isActive:t})=>[y]),tab1:a(({value:e,isActive:t})=>[h]),tab2:a(({value:e,isActive:t})=>[D]),_:1}),w])}const C=c(d,[["render",g],["__file","03.实现BLDCDriver驱动输出PWM.html.vue"]]),L=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/03.%E5%AE%9E%E7%8E%B0BLDCDriver%E9%A9%B1%E5%8A%A8%E8%BE%93%E5%87%BAPWM.html","title":"03.实现BLDCDriver驱动输出PWM","lang":"zh-CN","frontmatter":{"title":"03.实现BLDCDriver驱动输出PWM","date":"2024-09-16T02:30:00.000Z","index":true,"article":false,"order":3,"description":"03.实现BLDCDriver驱动输出PWM 确切来说是实现了一个接口，需要外部提供三个函数 _initDriver 初始化驱动 _enableDriver 启用/禁用驱动 _setPhraseVoltage 设置三相电压 因为这三个函数的具体实现都是和硬件相关的， 在不同硬件上（如stm32或arduino）会有不同的实现方式 具体实现 实现效果 a...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/03.%E5%AE%9E%E7%8E%B0BLDCDriver%E9%A9%B1%E5%8A%A8%E8%BE%93%E5%87%BAPWM.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"03.实现BLDCDriver驱动输出PWM"}],["meta",{"property":"og:description","content":"03.实现BLDCDriver驱动输出PWM 确切来说是实现了一个接口，需要外部提供三个函数 _initDriver 初始化驱动 _enableDriver 启用/禁用驱动 _setPhraseVoltage 设置三相电压 因为这三个函数的具体实现都是和硬件相关的， 在不同硬件上（如stm32或arduino）会有不同的实现方式 具体实现 实现效果 a..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:46:49.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-09-16T02:30:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"03.实现BLDCDriver驱动输出PWM\\",\\"description\\":\\"03.实现BLDCDriver驱动输出PWM 确切来说是实现了一个接口，需要外部提供三个函数 _initDriver 初始化驱动 _enableDriver 启用/禁用驱动 _setPhraseVoltage 设置三相电压 因为这三个函数的具体实现都是和硬件相关的， 在不同硬件上（如stm32或arduino）会有不同的实现方式 具体实现 实现效果 a...\\"}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"03.实现BLDCDriver驱动输出PWM","slug":"_03-实现bldcdriver驱动输出pwm","link":"#_03-实现bldcdriver驱动输出pwm","children":[]}],"git":{"createdTime":1726706103000,"updatedTime":1733147209000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":3}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"电子/FOC算法实现过程记录/03.实现BLDCDriver驱动输出PWM.md","localizedDate":"2024年9月16日","excerpt":"","autoDesc":true}');export{C as comp,L as data};
