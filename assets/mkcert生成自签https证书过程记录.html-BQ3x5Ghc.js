import{_ as s,c as e,o as n,b as a}from"./app-DjDtDPYL.js";const t="/assets/98e2d9d7e5fd0ced7043c50a28be71243a50b4830341e38753308ed6f96eac4f-D8SoGeEN.png",l="/assets/ea42bffa2f50e7090b52dced9381273fb9276f334a863d6e8c1cda6b3030a98e-DvhMeNqg.png",i="/assets/d54fd4c159d8f58627c6ec16a28ced8b2f47fd3a1b7d57dedd94031a6c68c6d3-DZoGAtjz.png",c="/assets/6c7400885884577a2b676133ffe162ed3485dea02996e03b7c9c9ef45c307f7d-BUFr1Abz.png",r="/assets/c0eb4ee022cca679c29669fd4cd0171fb124ccacec29670bb9dcdca59d46176c-kuWGHgZO.png",p="/assets/273368cf71de2ec25d2f2db736245f692c0a4d209a18a8c7d8f2bb9c64d0c1ec-CTmmap9-.png",o="/assets/816173bb4129ce92bbb68192a9f57d0218df7d1f3fb78ba2f6e0ce90a37f858d-HnYXiKYD.png",d="/assets/8146b3f22175a2139a6edd516eabedd020c7d394772057d918fba0c2d00ed3fc-zplolF15.png",m="/assets/3a54b606903275febc7a5e9d03f031bab96c4e1aa09b64e986b5b405a5581d48-BTpmMfut.png",u="/assets/379bb20613e6ebf812129a2ce13ca9a14eef295f69cdc41ecb5b40a9f45346bc-CGq2Jbyz.png",b="/assets/df4be11a914591cdeb1327c453b4d988bca8de2ce1deb45ab89f4015e821527e-BLV7ZIci.png",h="/assets/6e926867c2eb90dbcebe8911a7863ea099f4bc6c2230fafb7a94982fd8d4e4cd-C4TrBMVN.png",v="/assets/b67d7716a9270e7e723ba322faa4293cf706c1e35d8b7969ee5356446923b6e7-BsTOQADy.png",k={},g=a(`<h1 id="mkcert生成自签https证书过程记录" tabindex="-1"><a class="header-anchor" href="#mkcert生成自签https证书过程记录"><span>mkcert生成自签https证书过程记录</span></a></h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#mkcert%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BEhttps%E8%AF%81%E4%B9%A6%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95">mkcert生成自签https证书过程记录</a><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5">相关概念</a></li><li><a href="#%E5%AE%89%E8%A3%85mkcert">安装mkcert</a></li><li><a href="#%E7%94%9F%E6%88%90%E7%94%A8%E6%88%B7%E8%AF%81%E4%B9%A6">生成用户证书</a></li><li><a href="#%E5%AE%89%E8%A3%85%E9%A2%81%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6">安装颁发者证书</a><ul><li><a href="#%E5%9C%A8pc%E7%AB%AF%E5%AE%89%E8%A3%85">在PC端安装</a></li><li><a href="#%E5%9C%A8ios%E7%AB%AF%E5%AE%89%E8%A3%85">在IOS端安装</a></li></ul></li></ul></li></ul><h2 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念"><span>相关概念</span></a></h2><ul><li><p><strong>数字证书认证机构（CA），</strong></p><ul><li>是负责发放和管理数字证书的权威机构，</li><li>负责签发证书、认证证书、管理已颁发证书</li><li>CA 也拥有用户的证书（内含公钥）和私钥。</li><li>任何人都可以得到 CA 的证书（含公钥），用以验证 CA 所签发的证书。</li></ul></li><li><p><strong>用户证书</strong></p><ul><li>用户若欲获取证书，应先向 CA 提出申请，CA 判明申请者的身份后，为之分配一个公钥，并将该公钥与其身份信息绑定，为该整体签名，签名后的整体即为证书，发还给申请者。</li></ul></li><li><p><strong>鉴别用户证书的真伪</strong></p><ul><li>一个用户想鉴别另一个用户的证书的真伪，用 CA 的公钥对那个证书上的签字进行验证，一旦验证通过，该证书就被认为是有效的。</li></ul></li></ul><h2 id="安装mkcert" tabindex="-1"><a class="header-anchor" href="#安装mkcert"><span>安装mkcert</span></a></h2><p><strong>安装mkcert工具</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mkcert</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="生成用户证书" tabindex="-1"><a class="header-anchor" href="#生成用户证书"><span>生成用户证书</span></a></h2><p><strong>生成证书:<code>cert.crt</code> 和 私钥:<code>cert-key.key</code></strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkcert -cert-file ~/.ssl/cert.crt -key-file ~/.ssl/cert-key.key cn-zz-bgp-2.natfrp.cloud <span class="token number">43.249</span>.193.55 localhost <span class="token number">127.0</span>.0.1 ::1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出结果:</span></span>
<span class="line"><span class="token comment"># Created a new local CA 💥</span></span>
<span class="line"><span class="token comment"># Note: the local CA is not installed in the system trust store.</span></span>
<span class="line"><span class="token comment"># Note: the local CA is not installed in the Firefox and/or Chrome/Chromium trust store.</span></span>
<span class="line"><span class="token comment"># Run &quot;mkcert -install&quot; for certificates to be trusted automatically ⚠️</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Created a new certificate valid for the following names 📜</span></span>
<span class="line"><span class="token comment">#  - &quot;cn-zz-bgp-2.natfrp.cloud&quot;</span></span>
<span class="line"><span class="token comment">#  - &quot;43.249.193.55&quot;</span></span>
<span class="line"><span class="token comment">#  - &quot;localhost&quot;</span></span>
<span class="line"><span class="token comment">#  - &quot;127.0.0.1&quot;</span></span>
<span class="line"><span class="token comment">#  - &quot;::1&quot;</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># The certificate is at &quot;~/.ssl/cert.crt&quot; and the key at &quot;~/.ssl/cert-key.key&quot; ✅</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># It will expire on 22 November 2024 🗓</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置服务器安装用户证书(以code-server为例)</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># vi ~/.config/code-server/config.yaml</span></span>
<span class="line"><span class="token comment"># code-server的配置文件:</span></span>
<span class="line">bind-addr: <span class="token number">0.0</span>.0.0:8080</span>
<span class="line">auth: password</span>
<span class="line">password: ???????????????????????</span>
<span class="line"><span class="token comment"># cert 为刚刚生成的证书</span></span>
<span class="line">cert: /home/userName/.ssl/cert.crt</span>
<span class="line"><span class="token comment"># cert-key 为刚刚生成的私钥</span></span>
<span class="line">cert-key: /home/userName/.ssl/cert-key.key</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>此时访问localhost将依然报错,因为没有为浏览器安装颁发者的证书</strong></p><p><img src="`+t+`" alt=""></p><h2 id="安装颁发者证书" tabindex="-1"><a class="header-anchor" href="#安装颁发者证书"><span>安装颁发者证书</span></a></h2><h3 id="在pc端安装" tabindex="-1"><a class="header-anchor" href="#在pc端安装"><span>在PC端安装</span></a></h3><p><strong>方法1:使用命令将颁发者mkcert机构证书添加到系统信任,同时安装到本机的火狐浏览器和谷歌浏览器</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkcert <span class="token parameter variable">-install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出结果:</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># The local CA is now installed in the system trust store! </span></span>
<span class="line"><span class="token comment"># 翻译:本地证书已经添加到到系统信任仓库</span></span>
<span class="line"><span class="token comment"># Warning: &quot;certutil&quot; is not available, so the CA can&#39;t be automatically installed in Firefox and/or Chrome/Chromium! ⚠️</span></span>
<span class="line"><span class="token comment"># 翻译:certutil(证书工具)不可用,所以证书无法自动安装到本机的浏览器</span></span>
<span class="line"><span class="token comment"># Install &quot;certutil&quot; with &quot;apt install libnss3-tools&quot; and re-run &quot;mkcert -install&quot; 👈</span></span>
<span class="line"><span class="token comment"># 翻译: 执行 &quot;apt install libnss3-tools&quot;来安装&quot;certutil&quot;,然后 重新执行 &quot;mkcert -install&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装libnss3-tools</span></span>
<span class="line"><span class="token function">apt</span> <span class="token function">install</span> libnss3-tools</span>
<span class="line"><span class="token comment"># 重新执行 &quot;mkcert -install&quot;</span></span>
<span class="line">mkcert <span class="token parameter variable">-install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>此时浏览器就能正常访问了</strong></p><p><img src="`+l+`" alt=""></p><p><strong>方法2:手动将颁发者mkcert机构证书手动添加到客户端的浏览器</strong><br><strong>查看 CA 证书的存放位置</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mkcert <span class="token parameter variable">-CAROOT</span></span>
<span class="line"><span class="token comment"># 输出结果:</span></span>
<span class="line"><span class="token comment"># /root/.local/share/mkcert</span></span>
<span class="line"></span>
<span class="line">tree <span class="token variable"><span class="token variable">$(</span>mkcert <span class="token parameter variable">-CAROOT</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token comment"># 输出结果: </span></span>
<span class="line"><span class="token comment"># /home/dyg/.local/share/mkcert</span></span>
<span class="line"><span class="token comment"># ├── rootCA-key.pem 颁发者机构的私钥</span></span>
<span class="line"><span class="token comment"># └── rootCA.pem 颁发者机构的证书</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>然后将上述颁发者mkcert机构证书文件<code>rootCA.pem</code>手动添加到pc端的浏览器中</strong></p><p><img src="`+i+'" alt=""></p><h3 id="在ios端安装" tabindex="-1"><a class="header-anchor" href="#在ios端安装"><span>在IOS端安装</span></a></h3><p><strong>将颁发者mkcert机构证书手动添加到</strong></p><p><strong>安装前</strong><br><img src="'+c+'" alt=""></p><p><img src="'+r+'" alt=""></p><p><strong>安装中</strong><br><img src="'+p+'" alt=""><br><img src="'+o+'" alt=""><br><img src="'+d+'" alt=""><br><img src="'+m+'" alt=""><br><img src="'+u+'" alt=""><br><img src="'+b+'" alt=""></p><p><strong>安装后</strong><br><img src="'+h+'" alt=""></p><p><img src="'+v+'" alt=""></p>',32),E=[g];function f(A,_){return n(),e("div",null,E)}const y=s(k,[["render",f],["__file","mkcert生成自签https证书过程记录.html.vue"]]),C=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/mkcert%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BEhttps%E8%AF%81%E4%B9%A6%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/mkcert%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BEhttps%E8%AF%81%E4%B9%A6%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95.html","title":"mkcert生成自签https证书过程记录","lang":"zh-CN","frontmatter":{"title":"mkcert生成自签https证书过程记录","cover":"./cover/default_cover.jpg","date":"2022-08-22T14:45:00.000Z","tag":["mkcert","自签","https","证书"],"category":"笔记","description":"mkcert生成自签https证书过程记录 目录 mkcert生成自签https证书过程记录 目录 相关概念 安装mkcert 生成用户证书 安装颁发者证书 在PC端安装 在IOS端安装 相关概念 数字证书认证机构（CA）， 是负责发放和管理数字证书的权威机构， 负责签发证书、认证证书、管理已颁发证书 CA 也拥有用户的证书（内含公钥）和私钥。 任何人...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%90%8E%E7%AB%AF/mkcert%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BEhttps%E8%AF%81%E4%B9%A6%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/mkcert%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BEhttps%E8%AF%81%E4%B9%A6%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"mkcert生成自签https证书过程记录"}],["meta",{"property":"og:description","content":"mkcert生成自签https证书过程记录 目录 mkcert生成自签https证书过程记录 目录 相关概念 安装mkcert 生成用户证书 安装颁发者证书 在PC端安装 在IOS端安装 相关概念 数字证书认证机构（CA）， 是负责发放和管理数字证书的权威机构， 负责签发证书、认证证书、管理已颁发证书 CA 也拥有用户的证书（内含公钥）和私钥。 任何人..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-17T13:06:31.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:tag","content":"mkcert"}],["meta",{"property":"article:tag","content":"自签"}],["meta",{"property":"article:tag","content":"https"}],["meta",{"property":"article:tag","content":"证书"}],["meta",{"property":"article:published_time","content":"2022-08-22T14:45:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-17T13:06:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mkcert生成自签https证书过程记录\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-22T14:45:00.000Z\\",\\"dateModified\\":\\"2023-11-17T13:06:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"相关概念","slug":"相关概念","link":"#相关概念","children":[]},{"level":2,"title":"安装mkcert","slug":"安装mkcert","link":"#安装mkcert","children":[]},{"level":2,"title":"生成用户证书","slug":"生成用户证书","link":"#生成用户证书","children":[]},{"level":2,"title":"安装颁发者证书","slug":"安装颁发者证书","link":"#安装颁发者证书","children":[{"level":3,"title":"在PC端安装","slug":"在pc端安装","link":"#在pc端安装","children":[]},{"level":3,"title":"在IOS端安装","slug":"在ios端安装","link":"#在ios端安装","children":[]}]}],"git":{"createdTime":1700226391000,"updatedTime":1700226391000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":3.54,"words":1063},"filePathRelative":"后端/mkcert生成自签https证书过程记录/mkcert生成自签https证书过程记录.md","localizedDate":"2022年8月22日","excerpt":"","autoDesc":true}');export{y as comp,C as data};
