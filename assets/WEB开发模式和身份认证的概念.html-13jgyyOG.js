import{_ as r,c as l,e as o,b as s,w as i,r as a,o as E,d as n}from"./app-MQttUhkv.js";const g="/assets/40f0452c90f5994d012e9f073038ff3fbc45665c6da45c88587115bbcc12eb4e-CPOhRlKb.png",c="/assets/afa9ca9e3772872db3bb9bae6040575703ebddf7d568c9716d1d29a5d1e90d0c-DeIWzDht.png",d="/assets/b11f8a54b6f620cf5ebc2e775472341c20fe816eda06727d1196139c5cf1d9e0-GTZLVuXI.png",p="/assets/fdfbe7930227813d1039709dc80d7fb73364fbc99947afa2be37eaa1b3449bff-BVeNHGdI.png",B={};function A(u,e){const t=a("red");return E(),l("div",null,[e[2]||(e[2]=o('<h1 id="web开发模式和身份认证的概念" tabindex="-1"><a class="header-anchor" href="#web开发模式和身份认证的概念"><span>WEB开发模式和身份认证的概念</span></a></h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#web%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E6%A6%82%E5%BF%B5">WEB开发模式和身份认证的概念</a><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#web%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F">WEB开发模式</a><ul><li><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F">服务端渲染开发模式</a></li><li><a href="#%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F">前后端分离开发模式</a></li><li><a href="#web%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E7%9A%84%E9%80%89%E6%8B%A9">WEB开发模式的选择</a></li></ul></li><li><a href="#%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81">身份认证</a><ul><li><a href="#session%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6">session认证机制</a></li><li><a href="#jwt%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6">JWT认证机制</a></li></ul></li></ul></li></ul><h2 id="web开发模式" tabindex="-1"><a class="header-anchor" href="#web开发模式"><span>WEB开发模式</span></a></h2><h3 id="服务端渲染开发模式" tabindex="-1"><a class="header-anchor" href="#服务端渲染开发模式"><span>服务端渲染开发模式</span></a></h3><p><strong>页面由服务端拼接动态生成后发送给客户端</strong></p><ul><li>缺点 <ul><li>开发效率低</li><li>耗费服务端资源</li></ul></li><li>优点 <ul><li>有利于SEO</li><li>节省客户端资源</li></ul></li></ul><h3 id="前后端分离开发模式" tabindex="-1"><a class="header-anchor" href="#前后端分离开发模式"><span>前后端分离开发模式</span></a></h3><p><strong>前端用AJAX调接口,后端负责提供接口</strong></p><ul><li>优点 <ul><li>开发效率高, <ul><li>前端专注于UI界面,</li><li>后端专注于API开发,</li><li>前端开发时有多种选择,Jquery+模板引擎 或 Vue 或 React 等的框架</li></ul></li><li>用户体验好,容易实现局部刷新</li><li>减轻了服务器渲染压力</li></ul></li><li>缺点 <ul><li>不利于SEO, <ul><li>完整的页面内容是通过AJAX获取API接口得到的,</li><li>该问题可用VUE React前端框架的SSR(server Side render)解决</li></ul></li></ul></li></ul><h3 id="web开发模式的选择" tabindex="-1"><a class="header-anchor" href="#web开发模式的选择"><span>WEB开发模式的选择</span></a></h3><p><strong>WEB开发模式的选择需要考虑业务场景</strong></p><ul><li>企业网站,主要为展示产品,<strong>没有复杂的交互</strong>,<strong>需要良好的SEO</strong>,则一般使用<strong>服务端渲染</strong>的开发模式</li><li>后台管理网站,<strong>交互性强</strong>,<strong>不需要考虑SEO</strong>,则一般使用<strong>前后端分离</strong>的开发模式</li><li>若需<strong>同时考虑首页渲染速度</strong>和<strong>开发效率</strong>,则采用<strong>首页服务器渲染</strong> <strong>其他页面采用前后端分离</strong>的开发模式</li></ul><h2 id="身份认证" tabindex="-1"><a class="header-anchor" href="#身份认证"><span>身份认证</span></a></h2><p>身份认证(Authentication),身份验证,鉴权;指<strong>通过一定手段完成对用户身份的确认</strong><br> 身份认证的目的是为了<strong>确认当前所声称为某身份的用户,确实是所声称的用户</strong></p><ul><li>手机验证码登陆</li><li>邮箱验证登陆</li><li>二维码登陆</li><li>密码登陆</li></ul><p>不同WEB开发模式采用不同的身份认证机制</p><ul><li><strong>服务端渲染</strong>的开发模式一般使用<strong>session认证机制</strong></li><li><strong>前后端分离</strong>的开发模式一般使用<strong>JWT认证机制</strong></li></ul><p>Session认证机制需要配合Cookie才能实现,由于Cookie默认不支持跨域,所以但涉及到前端跨域访问后端接口时,需要做很多额外的配置,才能实现跨域Session认证</p><ul><li>前端不存在跨域访问后端接口,应使用<strong>Session认证机制</strong></li><li>前端跨域访问后端接口时应该使用<strong>JWT认证机制</strong></li></ul><h3 id="session认证机制" tabindex="-1"><a class="header-anchor" href="#session认证机制"><span>session认证机制</span></a></h3><p><strong>HTTP协议的无状态性</strong><br> 无状态性是指客户端<strong>每次发送的http请求都是独立的</strong>,多个请求之间没有直接的关系,<strong>服务端也不会保留每次http的请求状态</strong>. 解决该问题需使用<code>Cookie</code>,用于确认前后两个请求是同一个用户</p><p><strong>Cookie</strong></p><ul><li><strong>4KB限制</strong> 是存储在浏览器中一段<strong>不超过4kB的字符串</strong></li><li><strong>由键值对组成</strong>,有名称Name,值Value和其他几个可选属性组成(有效期,安全性,使用范围)</li><li><strong>会过期</strong></li><li><strong>按域名独立</strong> <strong>不同域名下的cookie各自独立</strong></li><li><strong>自动发送</strong> 客户端发送请求时,<strong>会自动把该域名下所有未过期的cookie发送给服务端</strong></li><li><strong>容易被伪造</strong> 浏览器提供了读写cookie的API</li><li><strong>本身不具有安全性</strong> 不建议存放隐私数据,<br><img src="'+g+'" alt="图 1"></li></ul><p><strong>获取;存储;发送cookie过程</strong></p><ul><li>客户端第一次向服务端发送请求时,服务端会通过响应头向客户端发送一个cookie</li><li>客户端收到该cookie后会<strong>自动保存</strong>到浏览器中</li><li>客户端后续的请求头将会<strong>自动携带cookie</strong><br><img src="'+c+'" alt="图 3"></li></ul><p><strong>session认证原理</strong><br> session认证使用<strong>cookie+身份认证</strong>的方式实现;提高了cookie本身的安全性<br><img src="'+d+'" alt="图 4"></p><p><strong>express中的session认证</strong><br> express中可使用<code>express-session</code>的<strong>第三方中间件</strong>来实现</p>',28)),s(t,null,{default:i(()=>e[0]||(e[0]=[n("详细笔记:[express学习笔记]()",-1)])),_:1,__:[0]}),e[3]||(e[3]=o(' <h3 id="jwt认证机制" tabindex="-1"><a class="header-anchor" href="#jwt认证机制"><span>JWT认证机制</span></a></h3><p><strong>概念</strong></p><ul><li><strong>JWT(Json Web Token)</strong>,是目前最流行的跨域认证解决方案</li><li>JWT组成: <code>header头部.Payload有效载荷.Signature签名</code><ul><li><code>Payload有效载荷</code> 是用户信息经过加密后的字符串</li><li><code>header头部</code> 和 <code>Signature签名</code> 是安全性相关的内容</li></ul></li></ul><p><strong>工作原理</strong></p><ul><li>客户端发送登陆请求,提交用户名和密码</li><li>服务端验证用户名和密码的真实性,将用户信息加密生成<code>token</code>发送给客户端</li><li>客户端收到token后手动保存到<code>LocalStorage</code>或<code>SessionStorage</code>中</li><li>客户端后续发送请求时,需携带名为<code>Authorization</code>的请求头,格式为<code>Authorization: Bearer Token字符串;</code></li><li>服务端收到请求后从请求头中提取出<code>Token</code>字段,并<strong>解密出用户信息</strong>,身份认证成功后,再根据客户端的请求的内容响应给客户端相应的数据<br><img src="'+p+'" alt="图 5"></li></ul><p><strong>express中的sJWT认证机制机制</strong></p>',7)),s(t,null,{default:i(()=>e[1]||(e[1]=[n("详细笔记:[express学习笔记]()",-1)])),_:1,__:[1]})])}const m=r(B,[["render",A]]),b=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/zip%E5%BD%92%E6%A1%A3/WEB%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E6%A6%82%E5%BF%B5/WEB%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E6%A6%82%E5%BF%B5.html","title":"WEB开发模式和身份认证的概念","lang":"zh-CN","frontmatter":{"title":"WEB开发模式和身份认证的概念","date":"2022-08-30T00:00:00.000Z","cover":"./cover/default_cover.jpg","tag":["身份认证"],"category":"后端","description":"WEB开发模式和身份认证的概念 目录 WEB开发模式和身份认证的概念 目录 WEB开发模式 服务端渲染开发模式 前后端分离开发模式 WEB开发模式的选择 身份认证 session认证机制 JWT认证机制 WEB开发模式 服务端渲染开发模式 页面由服务端拼接动态生成后发送给客户端 缺点 开发效率低 耗费服务端资源 优点 有利于SEO 节省客户端资源 前后...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WEB开发模式和身份认证的概念\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-18T08:31:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%89%8D%E7%AB%AF/zip%E5%BD%92%E6%A1%A3/WEB%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E6%A6%82%E5%BF%B5/WEB%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%9A%84%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"WEB开发模式和身份认证的概念"}],["meta",{"property":"og:description","content":"WEB开发模式和身份认证的概念 目录 WEB开发模式和身份认证的概念 目录 WEB开发模式 服务端渲染开发模式 前后端分离开发模式 WEB开发模式的选择 身份认证 session认证机制 JWT认证机制 WEB开发模式 服务端渲染开发模式 页面由服务端拼接动态生成后发送给客户端 缺点 开发效率低 耗费服务端资源 优点 有利于SEO 节省客户端资源 前后..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-18T08:31:16.000Z"}],["meta",{"property":"article:tag","content":"身份认证"}],["meta",{"property":"article:published_time","content":"2022-08-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-18T08:31:16.000Z"}],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"git":{"createdTime":1700226391000,"updatedTime":1710750676000,"contributors":[{"name":"YiguiDing","username":"YiguiDing","email":"2449695354@qq.com","commits":2,"url":"https://github.com/YiguiDing"}]},"readingTime":{"minutes":4.79,"words":1438},"filePathRelative":"前端/zip归档/WEB开发模式和身份认证的概念/WEB开发模式和身份认证的概念.md","excerpt":"","autoDesc":true}');export{m as comp,b as data};
