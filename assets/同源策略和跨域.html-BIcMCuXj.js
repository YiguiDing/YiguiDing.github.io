import{_ as t,c as o,e as i,o as r}from"./app-miCOOXrM.js";const n={};function s(a,e){return r(),o("div",null,e[0]||(e[0]=[i('<h2 id="同源策略和跨域" tabindex="-1"><a class="header-anchor" href="#同源策略和跨域"><span>同源策略和跨域</span></a></h2><p>同源策略(Same-Origin Policy)最早由Netscape公司提出,是<strong>浏览器</strong>的一种安全策略</p><ul><li><strong>同源</strong>: 协议 域名 端口号 均一致</li><li><strong>跨域</strong>: 违背同源策略就是跨域,</li><li><strong>具体表现</strong>: 如果在<code>a.com</code>的页面中向<code>b.com</code>的服务器的发送<strong>请求报文</strong>,则其<strong>响应报文</strong>会被浏览器<strong>拦截</strong>.</li></ul><h2 id="cros跨域-源-资源共享" tabindex="-1"><a class="header-anchor" href="#cros跨域-源-资源共享"><span>CROS跨域(源)资源共享</span></a></h2><p><strong>CROS</strong>(Cross-Origin Resource Sharing)跨域(源)资源共享,解决跨域资源共享的解决方案.</p><p><strong>特点</strong>: 不需要在客户端做特殊操作,解决跨域的步骤完全在服务器中进行.</p><p><strong>工作原理</strong>: 通过设置一个<strong>响应头</strong>来告诉浏览器该请求允许跨域</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#4c4f69;--shiki-dark:#E6E6E6;--shiki-light-bg:#eff1f5;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes catppuccin-latte slack-dark vp-code"><code class="language-"><span class="line"><span>Access-Control-Allow-Origin: *</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="完整访问控制请求头" tabindex="-1"><a class="header-anchor" href="#完整访问控制请求头"><span>完整访问控制请求头</span></a></h2><ul><li><code>Access-Control-Allow-Origin: URL或*</code> 指定了允许访问该资源的外域</li><li><code>Access-Control-Expose-Headers: 自定义响应头名1, 自定义响应头名2</code> 使得客户端能够获取到自定义的响应头</li><li><code>Access-Control-Max-Age: &lt;delta-seconds&gt;</code> 指定了 preflight 请求的结果能够被缓存多久</li><li><code>Access-Control-Allow-Credentials: true</code> 指定跨域请求时候能够携带验证信息,如cookie</li><li><code>Access-Control-Allow-Methods: &lt;method&gt;[, &lt;method&gt;]*</code> 设置请求允许的方法,默认仅支持 GET POST HEAD</li><li><code>Access-Control-Allow-Headers: &lt;field-name&gt;[, &lt;field-name&gt;]*</code> 设置允许的请求头的头名,默认仅支持9个请求头</li></ul><h2 id="cors请求分类" tabindex="-1"><a class="header-anchor" href="#cors请求分类"><span>CORS请求分类</span></a></h2><ul><li>简单请求 : <ul><li>请求方式必须为: <code>GET</code> <code>POST</code> <code>HEAD</code></li><li>请求头必须: <strong>不能包含自定义请求</strong> ,仅能包含默认支持9个请求头</li><li>简单请求仅会在客户端和服务端之间发送一次请求,</li></ul></li><li>预检请求 : <ul><li>请求方式: 除去<code>GET</code> <code>POST</code> <code>HEAD</code>之外的请求</li><li>请求头为: 请求头中<strong>包含自定义的头部</strong> 或包含 <code>application/json</code></li><li>预检请求会在客户端和服务端之间发送两次请求,第一次会发送OPTIONS类型的请求进行预检,之后才会发送真正的请求</li></ul></li></ul><p><strong>预检请求</strong><br> 在浏览器和服务器通信前,浏览器会先发送OPTIONS类型的请求进行预检,以获知服务器是否允许该实际请求,<br><strong>服务器响应OPTIONS类型的请求后浏览器才会发送真正的请求并携带真实的数据</strong></p>',13)]))}const l=t(n,[["render",s]]),d=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/zip%E5%BD%92%E6%A1%A3/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F.html","title":"同源策略和跨域","lang":"zh-CN","frontmatter":{"title":"同源策略和跨域","date":"2022-08-26T15:43:00.000Z","cover":"./cover/default_cover.jpg","tag":["前端","笔记"],"category":"笔记","description":"同源策略和跨域 同源策略(Same-Origin Policy)最早由Netscape公司提出,是浏览器的一种安全策略 同源: 协议 域名 端口号 均一致 跨域: 违背同源策略就是跨域, 具体表现: 如果在a.com的页面中向b.com的服务器的发送请求报文,则其响应报文会被浏览器拦截. CROS跨域(源)资源共享 CROS(Cross-Origin ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"同源策略和跨域\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-26T15:43:00.000Z\\",\\"dateModified\\":\\"2024-03-18T08:31:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%89%8D%E7%AB%AF/zip%E5%BD%92%E6%A1%A3/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"同源策略和跨域"}],["meta",{"property":"og:description","content":"同源策略和跨域 同源策略(Same-Origin Policy)最早由Netscape公司提出,是浏览器的一种安全策略 同源: 协议 域名 端口号 均一致 跨域: 违背同源策略就是跨域, 具体表现: 如果在a.com的页面中向b.com的服务器的发送请求报文,则其响应报文会被浏览器拦截. CROS跨域(源)资源共享 CROS(Cross-Origin ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-18T08:31:16.000Z"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:published_time","content":"2022-08-26T15:43:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-18T08:31:16.000Z"}],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"git":{"createdTime":1700226391000,"updatedTime":1710750676000,"contributors":[{"name":"YiguiDing","username":"YiguiDing","email":"2449695354@qq.com","commits":2,"url":"https://github.com/YiguiDing"}]},"readingTime":{"minutes":2.07,"words":620},"filePathRelative":"前端/zip归档/同源策略和跨域/同源策略和跨域.md","excerpt":"","autoDesc":true}');export{l as comp,d as data};
