import{_ as o,c as l,d as c,w as a,a as n,b as i,r as u,o as r,e as s}from"./app-DjDtDPYL.js";const k={},d=n("h2",{id:"_07-实现open-loop-velocity-control开环电压控制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_07-实现open-loop-velocity-control开环电压控制"},[n("span",null,"07.实现open_loop_velocity_control开环电压控制")])],-1),m=n("h3",{id:"具体实现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#具体实现"},[n("span",null,"具体实现")])],-1),v=n("code",null,"BLDCMotor.cpp",-1),b=n("code",null,"BLDCMotor.hpp",-1),_=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"BLDCMotor.hpp"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"BLDCMotor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),s(" polePairs"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"float"),s(" power_supply_voltage"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("polePairs "),n("span",{class:"token operator"},"="),s(" polePairs"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("power_supply_voltage "),n("span",{class:"token operator"},"="),s(" power_supply_voltage"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"connectDriver"),n("span",{class:"token punctuation"},"("),s("BLDCDriver "),n("span",{class:"token operator"},"*"),s("driver"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver "),n("span",{class:"token operator"},"="),s(" driver"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"connectSensor"),n("span",{class:"token punctuation"},"("),s("Sensor "),n("span",{class:"token operator"},"*"),s("sensor"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor "),n("span",{class:"token operator"},"="),s(" sensor"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"initFOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"initDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"enableDriver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"initSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"connectMotor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"alignSensor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"update"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * @details"),s(`
`),n("span",{class:"line"}," *  电角度=机械角度*极对数"),s(`
`),n("span",{class:"line"}," *  @return [0,2PI] => [0,UINT16_MAX]"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"electricalAngle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"getPositon"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"*"),s(" polePairs"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 设置相电压"),s(`
`),n("span",{class:"line"}," * @param u_d int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"}," * @param u_q int16_t [-32768,32767] 表示 [-1,1]"),s(`
`),n("span",{class:"line"}," * @param e_angle uint16_t [0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549°"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_d"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_q"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"uint16_t"),s(" e_angle"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" sin"),n("span",{class:"token punctuation"},","),s(" cos"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 计算三角函数")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"_sincos"),n("span",{class:"token punctuation"},"("),s("e_angle"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("sin"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),s("cos"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 帕克逆变换")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_alpha "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("cos "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_d"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("sin "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_q"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" INT16_MAX"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_beta "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("sin "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_d"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("cos "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("u_q"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" INT16_MAX"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 克拉克逆变换(等幅值形式)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_a "),n("span",{class:"token operator"},"="),s(" u_alpha"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_b "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("u_alpha "),n("span",{class:"token operator"},"+"),s(" _INT16_SQRT3_ "),n("span",{class:"token operator"},"*"),s(" u_beta "),n("span",{class:"token operator"},"/"),s(" INT16_MAX"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_c "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),s("u_a "),n("span",{class:"token operator"},"+"),s(" u_b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 设置相电压")]),s(`
`),n("span",{class:"line"},[s("    driver"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),s("u_a"),n("span",{class:"token punctuation"},","),s(" u_b"),n("span",{class:"token punctuation"},","),s(" u_c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"open_loop_voltage_control"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),s(" target"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"float"),s(" voltage "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"_constrain"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("limit_voltage"),n("span",{class:"token punctuation"},","),s(" target"),n("span",{class:"token punctuation"},","),s(" limit_voltage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(" u_q "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("direction "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),s("voltage "),n("span",{class:"token operator"},"/"),s(" power_supply_voltage "),n("span",{class:"token operator"},"*"),s(" INT16_MAX"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" u_q"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"electricalAngle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"uint8_t"),s(" idx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token class-name"},"BLDCMotor"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"loopFOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"update"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"++"),s("idx "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        Serial"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("sensor"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"getVelocity"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" _2PI_"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"open_loop_voltage_control"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3.0f"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),s(),n("span",{class:"token expression"},"__BLDCMotor_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"__BLDCMotor_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<stdint.h>")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"foc_utils.h"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"BLDCDriver.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"LowPassFilter.hpp"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"Sensor.hpp"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BLDCMotor")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"enum"),s(),n("span",{class:"token class-name"},"MotorDirectrion"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"int8_t")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        UNKNOW "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        CLOCK_WISE "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        ANTI_CLOCK_WISE "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 极对数")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"uint8_t"),s(" polePairs"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 供电电压")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"float"),s(" power_supply_voltage "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"12.0f"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 限制电压")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"float"),s(" limit_voltage "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"4.0f"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// directron")]),s(`
`),n("span",{class:"line"},[s("    MotorDirectrion direction "),n("span",{class:"token operator"},"="),s(" MotorDirectrion"),n("span",{class:"token double-colon punctuation"},"::"),s("CLOCK_WISE"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("    BLDCDriver "),n("span",{class:"token operator"},"*"),s("driver "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    Sensor "),n("span",{class:"token operator"},"*"),s("sensor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"BLDCMotor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint8_t"),s(" polePairs"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"float"),s(" power_supply_voltage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"connectDriver"),n("span",{class:"token punctuation"},"("),s("BLDCDriver "),n("span",{class:"token operator"},"*"),s("driver"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"connectSensor"),n("span",{class:"token punctuation"},"("),s("Sensor "),n("span",{class:"token operator"},"*"),s("sensor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"initFOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"loopFOC"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"},"     * 获取电角度"),s(`
`),n("span",{class:"line"},"     */")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"uint16_t"),s(),n("span",{class:"token function"},"electricalAngle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"},"     * 设置相电压"),s(`
`),n("span",{class:"line"},"     * @param u_d int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"},"     * @param u_q int16_t [-32768,32767] 表示 [-1,1]"),s(`
`),n("span",{class:"line"},"     * @param e_angle uint16_t [0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549°"),s(`
`),n("span",{class:"line"},"     */")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"setPhraseVoltage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int16_t"),s(" u_d"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(" u_q"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"uint16_t"),s(" e_angle"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"},"     * 开环电压控制"),s(`
`),n("span",{class:"line"},"     */")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"open_loop_voltage_control"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),s(" target"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=i(`<h3 id="实现效果" tabindex="-1"><a class="header-anchor" href="#实现效果"><span>实现效果</span></a></h3><p><code>06.filter.ino</code></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;BLDCMotor.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;BLDCDriver.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;Sensor.hpp&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;foc_utils.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;typedef.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;pwm.h&quot;</span></span></span>
<span class="line"></span>
<span class="line">BLDCMotor motor <span class="token operator">=</span> <span class="token function">BLDCMotor</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_En</span> <span class="token expression"><span class="token number">8</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Ua</span> <span class="token expression"><span class="token number">5</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Ub</span> <span class="token expression"><span class="token number">9</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M1_Uc</span> <span class="token expression"><span class="token number">6</span></span></span></span>
<span class="line">PwmOut <span class="token function">pwmA</span><span class="token punctuation">(</span>D5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">PwmOut <span class="token function">pwmB</span><span class="token punctuation">(</span>D9<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">PwmOut <span class="token function">pwmC</span><span class="token punctuation">(</span>D6<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">BLDCDriver driver <span class="token operator">=</span> <span class="token function">BLDCDriver</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token comment">// init driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">pinMode</span><span class="token punctuation">(</span>M1_En<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// enable</span></span>
<span class="line">      <span class="token comment">// pinMode(M1_Ua, OUTPUT); // a</span></span>
<span class="line">      <span class="token comment">// pinMode(M1_Ub, OUTPUT); // b</span></span>
<span class="line">      <span class="token comment">// pinMode(M1_Uc, OUTPUT); // c</span></span>
<span class="line">      <span class="token comment">// period 50us = 20,000hz; pulse 0 us = 0%</span></span>
<span class="line">      pwmA<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">20000.0f</span><span class="token punctuation">,</span> <span class="token number">0.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      pwmB<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">20000.0f</span><span class="token punctuation">,</span> <span class="token number">0.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      pwmC<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">20000.0f</span><span class="token punctuation">,</span> <span class="token number">0.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// enable or disable driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">bool</span> enable<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>M1_En<span class="token punctuation">,</span> enable <span class="token operator">?</span> HIGH <span class="token operator">:</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// enable</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// set pwm to driver</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int16_t</span> u_a<span class="token punctuation">,</span> <span class="token keyword">int16_t</span> u_b<span class="token punctuation">,</span> <span class="token keyword">int16_t</span> u_c<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// [-32768,32767] =&gt; [0,255]</span></span>
<span class="line">      <span class="token comment">// 大多数引脚上的 PWM 信号频率约为490 Hz</span></span>
<span class="line">      <span class="token comment">// 设置占空比</span></span>
<span class="line">      <span class="token comment">// analogWrite(M1_Ua, (u_a + _INT16_N_ONE_) / 255);</span></span>
<span class="line">      <span class="token comment">// analogWrite(M1_Ub, (u_b + _INT16_N_ONE_) / 255);</span></span>
<span class="line">      <span class="token comment">// analogWrite(M1_Uc, (u_c + _INT16_N_ONE_) / 255);</span></span>
<span class="line">      <span class="token comment">// [-32768,32768] =&gt; [-1,1] =&gt; [-50,50] =&gt; [0,100]</span></span>
<span class="line">      pwmA<span class="token punctuation">.</span><span class="token function">pulse_perc</span><span class="token punctuation">(</span>u_a <span class="token operator">/</span> <span class="token number">32768.0f</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置百分比</span></span>
<span class="line">      pwmB<span class="token punctuation">.</span><span class="token function">pulse_perc</span><span class="token punctuation">(</span>u_b <span class="token operator">/</span> <span class="token number">32768.0f</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      pwmC<span class="token punctuation">.</span><span class="token function">pulse_perc</span><span class="token punctuation">(</span>u_c <span class="token operator">/</span> <span class="token number">32768.0f</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// Serial.print(0);</span></span>
<span class="line">      <span class="token comment">// Serial.print(&#39;,&#39;);</span></span>
<span class="line">      <span class="token comment">// Serial.print(100);</span></span>
<span class="line">      <span class="token comment">// Serial.print(&#39;,&#39;);</span></span>
<span class="line">      <span class="token comment">// Serial.print(u_a / 32768.0f * 50 + 50);</span></span>
<span class="line">      <span class="token comment">// Serial.print(&#39;,&#39;);</span></span>
<span class="line">      <span class="token comment">// Serial.print(u_b / 32768.0f * 50 + 50);</span></span>
<span class="line">      <span class="token comment">// Serial.print(&#39;,&#39;);</span></span>
<span class="line">      <span class="token comment">// Serial.print(u_c / 32768.0f * 50 + 50);</span></span>
<span class="line">      <span class="token comment">// Serial.print(&#39;\\n&#39;);</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_ADDR</span> <span class="token expression"><span class="token number">0x36</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_RAW_ANGLE</span> <span class="token expression"><span class="token number">0x0c</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AS5600_ANGLE</span> <span class="token expression"><span class="token number">0x0e</span></span></span></span>
<span class="line">Sensor sensor <span class="token operator">=</span> <span class="token function">Sensor</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>AS5600_ADDR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>AS5600_ANGLE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">requestFrom</span><span class="token punctuation">(</span>AS5600_ADDR<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">uint16_t</span> data <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>data <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint8_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>data <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// as5600 12bit精度，左移4位变成16位</span></span>
<span class="line">      data <span class="token operator">&lt;&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">connectDriver</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">connectSensor</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sensor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">initFOC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  motor<span class="token punctuation">.</span><span class="token function">loopFOC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function w(f,g){const p=u("CodeTabs");return r(),l("div",null,[d,m,c(p,{id:"6",data:[{id:"<code v-pre>BLDCMotor.cpp</code>"},{id:"<code v-pre>BLDCMotor.hpp</code>"}]},{title0:a(({value:e,isActive:t})=>[v]),title1:a(({value:e,isActive:t})=>[b]),tab0:a(({value:e,isActive:t})=>[_]),tab1:a(({value:e,isActive:t})=>[y]),_:1}),h])}const D=o(k,[["render",w],["__file","07.实现open_loop_velocity_control开环电压控制.html.vue"]]),B=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/07.%E5%AE%9E%E7%8E%B0open_loop_velocity_control%E5%BC%80%E7%8E%AF%E7%94%B5%E5%8E%8B%E6%8E%A7%E5%88%B6.html","title":"07.实现open_loop_velocity_control开环电压控制","lang":"zh-CN","frontmatter":{"title":"07.实现open_loop_velocity_control开环电压控制","date":"2024-09-22T15:24:00.000Z","index":true,"article":false,"order":7,"description":"07.实现open_loop_velocity_control开环电压控制 具体实现 实现效果 06.filter.ino","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/07.%E5%AE%9E%E7%8E%B0open_loop_velocity_control%E5%BC%80%E7%8E%AF%E7%94%B5%E5%8E%8B%E6%8E%A7%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"07.实现open_loop_velocity_control开环电压控制"}],["meta",{"property":"og:description","content":"07.实现open_loop_velocity_control开环电压控制 具体实现 实现效果 06.filter.ino"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:46:49.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-09-22T15:24:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"07.实现open_loop_velocity_control开环电压控制\\",\\"description\\":\\"07.实现open_loop_velocity_control开环电压控制 具体实现 实现效果 06.filter.ino\\"}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"07.实现open_loop_velocity_control开环电压控制","slug":"_07-实现open-loop-velocity-control开环电压控制","link":"#_07-实现open-loop-velocity-control开环电压控制","children":[{"level":3,"title":"具体实现","slug":"具体实现","link":"#具体实现","children":[]},{"level":3,"title":"实现效果","slug":"实现效果","link":"#实现效果","children":[]}]}],"git":{"createdTime":1729956913000,"updatedTime":1733147209000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":2}]},"readingTime":{"minutes":0.2,"words":60},"filePathRelative":"电子/FOC算法实现过程记录/07.实现open_loop_velocity_control开环电压控制.md","localizedDate":"2024年9月22日","excerpt":"","autoDesc":true}');export{D as comp,B as data};
