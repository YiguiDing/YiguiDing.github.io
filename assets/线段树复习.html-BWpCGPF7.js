import{_ as n,c as s,o as a,b as p}from"./app-DjDtDPYL.js";const t={},e=p(`<h2 id="线段树复习" tabindex="-1"><a class="header-anchor" href="#线段树复习"><span>线段树复习</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">RangeTree</span> <span class="token punctuation">{</span></span>
<span class="line"> <span class="token keyword">int</span> curV<span class="token punctuation">;</span></span>
<span class="line"> <span class="token keyword">int</span> curL<span class="token punctuation">;</span></span>
<span class="line"> <span class="token keyword">int</span> curR<span class="token punctuation">;</span></span>
<span class="line"> <span class="token keyword">int</span> curM<span class="token punctuation">;</span></span>
<span class="line"> <span class="token class-name">RangeTree</span> left<span class="token punctuation">;</span></span>
<span class="line"> <span class="token class-name">RangeTree</span> right<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> <span class="token class-name">RangeTree</span><span class="token punctuation">(</span><span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token class-name">RangeTree</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  curL <span class="token operator">=</span> l<span class="token punctuation">;</span></span>
<span class="line">  curR <span class="token operator">=</span> r<span class="token punctuation">;</span></span>
<span class="line">  curM <span class="token operator">=</span> curL <span class="token operator">+</span> <span class="token punctuation">(</span>curR <span class="token operator">-</span> curL<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>curL <span class="token operator">!=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RangeTree</span><span class="token punctuation">(</span>curL<span class="token punctuation">,</span> curM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RangeTree</span><span class="token punctuation">(</span>curM <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> curR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  curV <span class="token operator">+=</span> num<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>curL <span class="token operator">!=</span> curR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> curM<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    left<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    right<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span> tarL<span class="token punctuation">,</span> <span class="token keyword">int</span> tarR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>curL <span class="token operator">==</span> tarR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">return</span> curV<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">if</span> <span class="token punctuation">(</span>tarR <span class="token operator">&lt;=</span> curM<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> left<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>tarL<span class="token punctuation">,</span> tarR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>curM <span class="token operator">&lt;</span> tarL<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> right<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>tarL<span class="token punctuation">,</span> tarR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> left<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>tarL<span class="token punctuation">,</span> curM<span class="token punctuation">)</span> <span class="token operator">+</span> right<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>curM <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> tarR<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),c=[e];function l(o,i){return a(),s("div",null,c)}const r=n(t,[["render",l],["__file","线段树复习.html.vue"]]),k=JSON.parse('{"path":"/%E7%AE%97%E6%B3%95/zip%E5%BD%92%E6%A1%A3/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%A4%8D%E4%B9%A0/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%A4%8D%E4%B9%A0.html","title":"线段树复习","lang":"zh-CN","frontmatter":{"title":"线段树复习","cover":"./cover/default_cover.jpg","date":"2023-04-07T16:59:00.000Z","tag":["蓝桥杯","JAVA","算法","刷题笔记"],"category":"算法","description":"线段树复习","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%AE%97%E6%B3%95/zip%E5%BD%92%E6%A1%A3/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%A4%8D%E4%B9%A0/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%A4%8D%E4%B9%A0.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"线段树复习"}],["meta",{"property":"og:description","content":"线段树复习"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-18T08:31:16.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:tag","content":"蓝桥杯"}],["meta",{"property":"article:tag","content":"JAVA"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"刷题笔记"}],["meta",{"property":"article:published_time","content":"2023-04-07T16:59:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-18T08:31:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线段树复习\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-07T16:59:00.000Z\\",\\"dateModified\\":\\"2024-03-18T08:31:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"线段树复习","slug":"线段树复习","link":"#线段树复习","children":[]}],"git":{"createdTime":1700226391000,"updatedTime":1710750676000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":0.51,"words":152},"filePathRelative":"算法/zip归档/线段树复习/线段树复习.md","localizedDate":"2023年4月7日","excerpt":"","autoDesc":true}');export{r as comp,k as data};
