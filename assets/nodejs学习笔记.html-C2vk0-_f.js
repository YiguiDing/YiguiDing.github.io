import{_ as l,c as o,a as n,d as p,w as e,e as s,b as a,r as c,o as i}from"./app-DjDtDPYL.js";const u="/assets/nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-DLm7j8Ps.png",r="/assets/afb25ede4b5e464b04d2e39ded97f116b68c751c3bb781cd329d73e78c10ca58-OgSQPV3R.png",d="/assets/7aa213781d4b45aa5495200255be62941fb36990715cf6fc70c800ca6d6ee2dd-CwXJKw-o.png",k={},m=a('<h1 id="nodejs学习笔记" tabindex="-1"><a class="header-anchor" href="#nodejs学习笔记"><span>nodejs学习笔记</span></a></h1><p><img src="'+u+'" alt=""></p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">nodejs学习笔记</a><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">基本概念</a></li><li><a href="#%E6%A8%A1%E5%9D%97">模块</a><ul><li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li><li><a href="#%E9%80%9A%E8%BF%87moduleexports%E5%AE%9E%E7%8E%B0%E6%A8%A1%E5%9D%97%E5%8C%96">通过<code>module.exports</code>实现模块化</a></li><li><a href="#npm%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7">npm包管理工具</a></li></ul></li><li><a href="#%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97">内置模块</a><ul><li><a href="#fs%E6%A8%A1%E5%9D%97">fs模块</a></li><li><a href="#path%E8%B7%AF%E5%BE%84%E6%A8%A1%E5%9D%97">path路径模块</a></li><li><a href="#http%E6%A8%A1%E5%9D%97">http模块</a></li></ul></li><li><a href="#%E5%B0%9D%E8%AF%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9D%97">尝试自定义模块</a></li><li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97">第三方模块</a><ul><li><a href="#momentjs-%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97">moment.js 三方模块</a></li><li><a href="#i5ting_toc-%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97">i5ting_toc 第三方模块</a></li><li><a href="#express%E6%A8%A1%E5%9D%97">express模块</a></li></ul></li></ul></li></ul><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2>',5),v=a('<li><p><strong>js解析引擎</strong></p><ul><li>Chrome 浏览器 -&gt; V8 <strong>性能最好</strong></li><li>Firefox 浏览器 -&gt; OdinMonkey 奥丁猴</li><li>Safri 浏览器 -&gt; JSCore</li><li>IE 浏览器 -&gt; Chakra查克拉</li></ul></li><li><p><strong>运行环境区别</strong></p><ul><li><strong>Nodejs</strong>是js的<strong>后端</strong>运行环境,能调用<strong>nodejs的内置API</strong></li><li><strong>浏览器</strong>是js的<strong>前端</strong>运行环境,能调用<strong>浏览器的内置API</strong></li><li><img src="'+r+'" alt="图 3"></li><li><img src="'+d+'" alt="图 2"></li></ul></li><li><p><strong>nodejs用途</strong></p><ul><li>基于 <strong>Express</strong> 框架,可快速构建 <strong>Web应用</strong></li><li>基于 <strong>Express</strong> 框架,可快速构建 <strong>跨平台桌面应用</strong></li><li>基于 <strong>restify</strong> 框架,可快速构建 <strong>API接口项目</strong></li><li>读写和操作数据库;创建实用的命令行辅助前端开发;......</li></ul></li><li><p>学习路径</p><ul><li>js基础语法</li><li>nodejs内置API</li><li>第三方API:express mysql</li></ul></li>',4),g=a(`<h2 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><p><strong>模块的分类</strong></p><ul><li>内置模块</li><li>第三方模块</li><li>自定义模块</li></ul><p><strong>CommonJS模块化规范</strong></p><ul><li>一个 <code>.js</code> 文件就是一个模块,每个模块内部的 <strong>module变量</strong> 代表 <strong>当前模块</strong></li><li><code>module</code> 变量是一个 <strong>对象</strong> ,其 exports属性 是 对外的接口</li><li>使用 <code>require()</code> 加载模块时,就是在加载 <code>module.exports</code> 属性</li></ul><blockquote><p>注意: 现已新增 <strong>exports 变量</strong> ,其默认指向<code>module.exports</code>所指向的对象,能够被覆盖,即当:<code>exports={}</code>时, <code>exports</code>便不再指向<code>module.exports</code>所指向的对象.</p></blockquote><p><strong>模块的加载机制</strong></p><blockquote><p>注意: 使用<code>require()</code>引入模块 <code>XXX.js</code> 时,会执行 <code>XXX.js</code> 中的代码<br> 但模块在第一次引入后会被缓存,后续再次引入不会执行其中代码</p></blockquote><ul><li><p>引入<strong>内置模块</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>内置模块的优先级最高,即使<code>./node_modules/</code>下有<code>./fs/</code> 同名模块文件,也会优先加载内置模块</p></blockquote></li><li><p>引入<strong>第三方模块</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>express<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>先到当前目录的<code>./node_modules/</code>查找模块,若没有则进入到上一级目录的<code>../node_modules/</code>,直到文件系统的根目录<code>/node_modules/</code></p></blockquote></li><li><p>引入<strong>自定义模块</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 可以省略.js后缀</span></span>
<span class="line"><span class="token keyword">const</span> demo1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">/</span>demo<span class="token operator">/</span>demo1<span class="token punctuation">.</span>js<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> demo<span class="token operator">/</span>demo1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">/</span>demo<span class="token operator">/</span>demo1<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 若/demo2/目录下有package.json文件 则会从main属性找到模块的入口</span></span>
<span class="line"><span class="token keyword">const</span> demo2 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">/</span>demo<span class="token operator">/</span>demo2<span class="token operator">/</span>demo2<span class="token punctuation">.</span>js<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> demo2 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">/</span>demo<span class="token operator">/</span>demo2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意:引入<strong>自定义模块</strong>时必须使用<code>./</code>或<code>../</code>的相对路径,可以省略 <code>.js</code> 的文件名,<br><strong>require会自动按一下顺序补全后缀名</strong></p><ul><li>不补全</li><li>补全<code>.js</code></li><li>补全<code>.json</code></li><li>补全<code>.node</code></li><li>任然无法定位文件则报错</li></ul></blockquote></li><li><p><strong>自定义模块:引入目录</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> demo2 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">/</span>demo<span class="token operator">/</span>demo2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>若引入的是一个目录,则有三种情况</p><ul><li>优先在查找<strong>被引入目录</strong>下的<code>package.json</code>的<code>main</code>属性所指向的文件</li><li>若失败则查找<strong>被引入目录</strong>下的<code>index.js</code>文件</li><li>若仍然无法找到,则报错</li></ul></blockquote></li></ul><h3 id="通过module-exports实现模块化" tabindex="-1"><a class="header-anchor" href="#通过module-exports实现模块化"><span>通过<code>module.exports</code>实现模块化</span></a></h3><p><strong>使用示例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// demo1.js</span></span>
<span class="line">module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;DingYigui&quot;</span></span>
<span class="line">module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hi&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// demo2.js</span></span>
<span class="line"><span class="token keyword">const</span> demo1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./demo1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">demo1<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="npm包管理工具" tabindex="-1"><a class="header-anchor" href="#npm包管理工具"><span>npm包管理工具</span></a></h3><p><strong>包的分类</strong></p><ul><li>项目包 存放在<code>./node_modules/</code></li><li>全局包 只有工具性质的包才有安装到全局的必要,因为其提供了终端命令工具</li></ul><p><strong>包的规范结构</strong></p><ul><li>包必须以单独的目录存在</li><li>包的根目录下必须包含<code>package.js</code></li><li><code>package.js</code>必须包含 <code>name</code> <code>version</code> <code>main</code> 三个属性,其中main表示包的入口 <blockquote><p>通过<code>require(express)</code>引入包的过程: <code>./node_modules/express/package.js</code> -&gt; <code>main</code> -&gt; <code>./express.js</code> -&gt; <code>module.exports</code></p></blockquote></li></ul><p><strong>使用npm安装第三方包后多出的文件夹和文件</strong></p><ul><li><code>node_modules/</code> 存放以安装的包, <strong>require</strong> 的搜索路径</li><li><code>package-lock.json</code> 记录 <strong>node_modules</strong> 目录下每一个包的下载信息,包名,版本,下载地址.</li></ul><blockquote><p>不要手动修改<code>node_modules/</code>和<code>package-lock.json</code>中的内容</p></blockquote><p><strong>包管理配置文件package.js</strong></p><ul><li>记录项目名称,版本,描述等</li><li>记录项目中用到的其他包</li><li>记录仅在开发期间用到的包</li><li>记录仅在开发和部署期间用到的包</li></ul><blockquote><p>该文件可通过<code>npm init -y</code> 命令生成<br> 该文件中的 <code>dependencies</code> 项 会在执行 <code>npm install/uninstall packageName</code> 后更新<br> 若省略包名,即执行 <code>npm install</code> 则会安装 <code>package.js</code> 中 <code>dependencies</code> 节点所记录的<strong>所有包</strong></p></blockquote><p><strong>npm命令</strong></p><ul><li><code>npm init -y</code> 初始化当前项目</li><li><code>npm install/uninstall pkgName</code> 安装/卸载包名</li><li><code>npm install/uninstall pkgName@1.0.0</code> 安装/卸载包名 <ul><li><code>-g</code> 执行全局的操作</li><li><code>-D</code> <code>--save-dev</code> 所安装的包仅开发过程中使用到,记录到 <code>devDependencise</code> 节点中</li></ul></li><li><code>npm config set registry=https://registry.npmmirror.com/</code> 换源</li><li><code>npm config get registry</code> 查看源设置情况</li><li><code>npm login</code> 登陆npm帐号</li><li><code>npm publish</code> 发布当前包</li><li><code>npm unpublish 包名 --force</code> 删除发布的包 <ul><li>只能删除72小时以内发布的包</li><li>不能重新发布24小时内删除的包</li></ul></li></ul><p><strong>版本号规范X.X.X</strong></p><ul><li>第一位数字 大版本,从底层重构</li><li>第二位数字 功能版本,添加了新功能</li><li>第三位数字 Bug修复版本,修复了Bug</li></ul><blockquote><p>版本号提升规则: 某一位数字提升,该位之后的所有位归零</p></blockquote><p><strong>搜索包的官网</strong><br><br> 搜索包:<a href="npmjs.com">npmjs.com</a> <br><br> 下载包:<a href="registry.npmjs.org">registry.npmjs.org</a></p><p><strong>nrm工具</strong></p><ul><li>安装: <code>npm install nrm -g</code></li><li>查看可用镜像 nrm ls</li><li>切换镜像 nrm use taobao</li></ul><h2 id="内置模块" tabindex="-1"><a class="header-anchor" href="#内置模块"><span>内置模块</span></a></h2><h3 id="fs模块" tabindex="-1"><a class="header-anchor" href="#fs模块"><span>fs模块</span></a></h3><ul><li><p><code>fs.readFile(path[,options],callback(err,data))</code> 读取指定文件,options默认为<code>utf-8</code></p></li><li><p><code>fs.writeFile(path,data[,options],callback(err))</code> 写入指定文件,options默认为<code>utf-8</code></p><ul><li>注意该函数只能创建文件不能创建文件夹</li><li>重复调用会覆盖上一次写入文件的内容</li></ul></li></ul><p><strong>简单案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./1.fs.js&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&quot;./1.readfile.js&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;这是写入的数据&quot;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实际案例:数据格式化</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">将原数据:</span>
<span class="line">语文=100 数学=100 英语=100</span>
<span class="line">转换为: </span>
<span class="line">语文:100</span>
<span class="line">数学:100</span>
<span class="line">英语:100</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./src/成绩.txt&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取错误&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取成功:&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">var</span> list <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">var</span> newList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;处理数据中......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            newList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        target <span class="token operator">=</span> newList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;处理数据完毕:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;写入数据中......&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&quot;./src/成绩-output.txt&quot;</span><span class="token punctuation">,</span>target<span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;写入完毕.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>路径拼接的问题</strong><br><br> 在使用相对路径读取文件时,<code>./</code>表示<strong>当前目录</strong>,在程序中,该<strong>当前目录</strong>默认为node命令执行时所在的目录,而不是程序文件所在的目录<br><br><br><strong>解决方案</strong></p><ul><li>使用 绝对路径</li><li>使用字符串拼接 <code>__dirname</code> + 相对路径(不能带有 <code>./</code> 或 <code>../</code>) <ul><li>__dirname表示当前<code>.js</code>文件所在目录</li><li>这种方式仍然存在一些问题</li></ul></li></ul><h3 id="path路径模块" tabindex="-1"><a class="header-anchor" href="#path路径模块"><span>path路径模块</span></a></h3><ul><li><p><code>path.join([...paths])</code> 用来将多个路径片段拼接成一个完整的路径字符串</p></li><li><p><code>path.basename(/path/to/fileName.txt)</code> 用来获取路径中的<code>文件名.扩展名</code></p></li><li><p><code>path.extname(/path/to/fileName.txt)</code> 用来获取路径中的<code>.扩展名</code></p></li></ul><p><strong>简单案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> temp1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;/home&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/dyg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;../&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/admin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>temp1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">输出:</span>
<span class="line">/home/admin/test.txt</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> temp2 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>temp2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">输出:</span>
<span class="line">/mnt/D/GitProject/YiguiDing.github.ioV2/source/_posts/nodejs学习笔记/demos/test.txt</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> temp3 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/fileName.txt&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>temp3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">输出:</span>
<span class="line">fileName.txt</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> temp4 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/fileName.12345&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;345&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>temp4<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">输出:</span>
<span class="line">fileName.12</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> temp5 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/fileName.12345&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>temp5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">输出:</span>
<span class="line">.12345</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>综合案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;./src/待拆分文件.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// console.log(data);</span></span>
<span class="line">        <span class="token function">resolveCSS</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">resolveJS</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">resolveHTML</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">resolveCSS</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;style&gt;[\\s\\S]*&lt;\\/style&gt;</span><span class="token regex-delimiter">/</span></span></span>
<span class="line">    <span class="token keyword">var</span> value <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;style&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\\/style&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// console.log(value);</span></span>
<span class="line">    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;./src/index.css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveCSS failed:&quot;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveCSS success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">resolveJS</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script&gt;[\\s\\S]*&lt;\\/script&gt;</span><span class="token regex-delimiter">/</span></span></span>
<span class="line">    <span class="token keyword">var</span> value <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\\/script&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// console.log(value);</span></span>
<span class="line">    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveJS failed:&quot;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveJS success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> value<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">resolveHTML</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> value <span class="token operator">=</span> html</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;style&gt;[\\s\\S]*&lt;\\/style&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script&gt;[\\s\\S]*&lt;\\/script&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\\/title&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/title&gt;</span>
<span class="line">        &lt;link rel=&quot;stylesheet&quot; href=&quot;./index.css&quot; \\&gt;</span>
<span class="line">        &lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt;</span>
<span class="line">    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;./src/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveHTML failed:&quot;</span><span class="token operator">+</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolveHTML success:&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>./src/待拆分文件.html</strong></p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">        <span class="token selector">#id_1</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span></span>
<span class="line">            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span>
<span class="line">            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span></span>
<span class="line">            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">            <span class="token selector">#id_2</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span></span>
<span class="line">                <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span>
<span class="line">                <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span></span>
<span class="line">                <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;this is js code&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id_1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        测试文字</span>
<span class="line">        测试文字</span>
<span class="line">        测试文字</span>
<span class="line">        测试文字</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http模块" tabindex="-1"><a class="header-anchor" href="#http模块"><span>http模块</span></a></h3><p><strong>request 的属性和方法</strong></p><ul><li><code>request.url</code> 如:<code>/</code>;<code>/index.html</code></li><li><code>request.method</code> 如 <code>GET</code> <code>POST</code></li></ul><p><strong>response 的属性和方法</strong></p><ul><li><code>response.end(string)</code> 向客户端响应内容</li><li><code>response.setHeader(&quot;key&quot;,&quot;value&quot;)</code> 设置响应头 <ul><li>防止中文乱码<code>response.setHeader(&quot;Content-Type&quot;,&quot;text/url;charset=utf-8&quot;)</code></li></ul></li></ul><p><strong>简易案例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//导入http模块</span></span>
<span class="line"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//创建实例对象</span></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//绑定request事件</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;收到了一个http请求...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//启动服务</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器已启动,正在监听8000端口...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>简易动态响应(路由)的实现</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//导入http模块</span></span>
<span class="line"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//创建实例对象</span></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//绑定request事件</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url</span>
<span class="line">    <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;404&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token operator">===</span><span class="token string">&quot;/&quot;</span> <span class="token operator">||</span> url<span class="token operator">===</span><span class="token string">&quot;/index&quot;</span> <span class="token operator">||</span> url<span class="token operator">===</span><span class="token string">&quot;/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;index&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token operator">===</span><span class="token string">&quot;/about&quot;</span> <span class="token operator">||</span>  url<span class="token operator">===</span><span class="token string">&quot;/about.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;about&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//启动服务</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器已启动,正在监听8000端口...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实现简易Web服务器</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//导入http模块</span></span>
<span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//创建实例对象</span></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//绑定request事件</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> rootUrl <span class="token operator">=</span> <span class="token string">&quot;./src&quot;</span></span>
<span class="line">    <span class="token keyword">let</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url</span>
<span class="line">    <span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;404&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>url<span class="token operator">===</span><span class="token string">&quot;/&quot;</span> <span class="token operator">||</span> url<span class="token operator">===</span><span class="token string">&quot;/index&quot;</span> <span class="token operator">||</span> url<span class="token operator">===</span><span class="token string">&quot;/index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        url<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/index.html</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span>rootUrl<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// content = err.message</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            content <span class="token operator">=</span> data</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// res.setHeader(&quot;Content-Type&quot;,&quot;text/html;charset=utf-8&quot;) //text/html会导致浏览器无法识别css代码</span></span>
<span class="line">        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//启动服务</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器已启动,http://127.0.0.1:8000/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="尝试自定义模块" tabindex="-1"><a class="header-anchor" href="#尝试自定义模块"><span>尝试自定义模块</span></a></h2><p><strong>目录结构</strong></p><ul><li>自定义模块根目录 <ul><li>index.js</li><li>package.json</li><li><a href="http://README.md" target="_blank" rel="noopener noreferrer">README.md</a></li></ul></li><li>test.js</li></ul><p><strong>index.js</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 实现html转义</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">htmlEncode</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//编码</span></span>
<span class="line">    <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;|&gt;|&quot;|&amp;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token parameter">march</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span><span class="token punctuation">(</span>march<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&lt;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&amp;lt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&gt;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&amp;gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&quot;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&amp;quot;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&amp;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&quot;&amp;amp;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">         <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">htmlDecode</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//解码</span></span>
<span class="line">    <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;lt;|&amp;gt;|&amp;quot;|&amp;amp;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token parameter">march</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span><span class="token punctuation">(</span>march<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&amp;lt;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&amp;gt;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&amp;quot;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token string">&#39;&amp;amp;&#39;</span><span class="token operator">:</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">         <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>htmlEncode <span class="token operator">=</span> htmlEncode</span>
<span class="line">module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>htmlDecode <span class="token operator">=</span> htmlDecode</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>package.json</strong></p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo-test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;描述&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>test.js</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./6.自定义模块&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1 style=&quot;color:skyblue&quot;&gt;测试&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"><span class="token keyword">var</span> encode <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">htmlEncode</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> decode <span class="token operator">=</span> test<span class="token punctuation">.</span><span class="token function">htmlDecode</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三方模块" tabindex="-1"><a class="header-anchor" href="#第三方模块"><span>第三方模块</span></a></h2><p><strong>为什么需要第三方包?</strong><br><br> nodejs内置模块仅提供了底层API,使用内置模块开发效率低,<br><br> 第三方模块是基于内置模块开发的,提供了更高级更方便的API,提高了开发效率</p><h3 id="moment-js-三方模块" tabindex="-1"><a class="header-anchor" href="#moment-js-三方模块"><span>moment.js 三方模块</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;moment&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> tm <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;YYYY-MM-DD HH-mm-ss&quot;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tm<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="i5ting-toc-第三方模块" tabindex="-1"><a class="header-anchor" href="#i5ting-toc-第三方模块"><span>i5ting_toc 第三方模块</span></a></h3><p>(用处不大)<br><br> i5ting_toc 是md转html的命令行工具,需全局安装<br><br><strong>使用</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">i5ting_toc -f ./fileName.md -o </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="express模块" tabindex="-1"><a class="header-anchor" href="#express模块"><span>express模块</span></a></h3>`,80),b=n("p",null,[s("express作用和nodejs的http模块类似,用于创建web服务器"),n("br"),n("br"),s(" express是基于http模块封装的,使用起来比http模块简单,效率更高")],-1);function h(q,f){const t=c("red");return i(),o("div",null,[m,n("ul",null,[n("li",null,[p(t,null,{default:e(()=>[s("**Nodejs是基于ChromeV8的js解析引擎**")]),_:1})]),v]),g,p(t,null,{default:e(()=>[s("详细笔记:[express学习笔记]()")]),_:1}),s(),b])}const y=l(k,[["render",h],["__file","nodejs学习笔记.html.vue"]]),j=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","title":"nodejs学习笔记","lang":"zh-CN","frontmatter":{"title":"nodejs学习笔记","date":"2022-08-28T13:13:00.000Z","cover":"./cover/nodejs学习笔记.png","tag":["nodejs"],"category":"后端","description":"nodejs学习笔记 目录 nodejs学习笔记 目录 基本概念 模块 概念 通过module.exports实现模块化 npm包管理工具 内置模块 fs模块 path路径模块 http模块 尝试自定义模块 第三方模块 moment.js 三方模块 i5ting_toc 第三方模块 express模块 基本概念 js解析引擎 Chrome 浏览器 ->...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%90%8E%E7%AB%AF/nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/nodejs%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"nodejs学习笔记"}],["meta",{"property":"og:description","content":"nodejs学习笔记 目录 nodejs学习笔记 目录 基本概念 模块 概念 通过module.exports实现模块化 npm包管理工具 内置模块 fs模块 path路径模块 http模块 尝试自定义模块 第三方模块 moment.js 三方模块 i5ting_toc 第三方模块 express模块 基本概念 js解析引擎 Chrome 浏览器 ->..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-17T13:06:31.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:published_time","content":"2022-08-28T13:13:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-17T13:06:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nodejs学习笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-28T13:13:00.000Z\\",\\"dateModified\\":\\"2023-11-17T13:06:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"模块","slug":"模块","link":"#模块","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"通过module.exports实现模块化","slug":"通过module-exports实现模块化","link":"#通过module-exports实现模块化","children":[]},{"level":3,"title":"npm包管理工具","slug":"npm包管理工具","link":"#npm包管理工具","children":[]}]},{"level":2,"title":"内置模块","slug":"内置模块","link":"#内置模块","children":[{"level":3,"title":"fs模块","slug":"fs模块","link":"#fs模块","children":[]},{"level":3,"title":"path路径模块","slug":"path路径模块","link":"#path路径模块","children":[]},{"level":3,"title":"http模块","slug":"http模块","link":"#http模块","children":[]}]},{"level":2,"title":"尝试自定义模块","slug":"尝试自定义模块","link":"#尝试自定义模块","children":[]},{"level":2,"title":"第三方模块","slug":"第三方模块","link":"#第三方模块","children":[{"level":3,"title":"moment.js 三方模块","slug":"moment-js-三方模块","link":"#moment-js-三方模块","children":[]},{"level":3,"title":"i5ting_toc 第三方模块","slug":"i5ting-toc-第三方模块","link":"#i5ting-toc-第三方模块","children":[]},{"level":3,"title":"express模块","slug":"express模块","link":"#express模块","children":[]}]}],"git":{"createdTime":1700226391000,"updatedTime":1700226391000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":9.67,"words":2902},"filePathRelative":"后端/nodejs学习笔记/nodejs学习笔记.md","localizedDate":"2022年8月28日","excerpt":"","autoDesc":true}');export{y as comp,j as data};
