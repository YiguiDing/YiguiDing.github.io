import{_ as o,c as l,d as i,w as a,b as p,r as u,o as r,a as n,e as s}from"./app-DjDtDPYL.js";const k="/assets/image-BUF1nzy2.png",d={},m=p('<h2 id="_01-使用定点数查表法计算三角函数" tabindex="-1"><a class="header-anchor" href="#_01-使用定点数查表法计算三角函数"><span>01.使用定点数查表法计算三角函数</span></a></h2><ul><li><code>返回值</code><ul><li>类型: <code>int16_t</code></li><li>映射关系：<code>[-32768,32767]</code> 表示 <code>[-1,1]</code></li><li>精度：1/32768 = 0.0000305</li></ul></li><li><code>角度</code><ul><li>类型: <code>uint16_t</code></li><li>映射关系：<code>[0,65535]</code> 表示 <code>[0,2PI]</code></li><li>精度：360°/65535 = 0.00549°</li></ul></li></ul><h3 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现"><span>具体实现</span></a></h3>',3),v=n("code",null,"foc_utils.c",-1),b=n("code",null,"foc_utils.h",-1),_=n("code",null,"typedef.h",-1),h=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"foc_utils.h"')])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"}," * 使用定点数计算sin"),s(`
`),n("span",{class:"line"}," * @param a uint16_t [0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549°"),s(`
`),n("span",{class:"line"}," * @return int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"}," */")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"__attribute__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("weak"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token function"},"_sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// sine_array [0,1] => [0,32767] 这里要用32767表示1，因为int16_t可以表示-32768，但是无法表示+32768")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"uint16_t"),s(" sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"65"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"804"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1608"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2410"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3212"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4011"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4808"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5602"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6393"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7179"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7962"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8739"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9512"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10278"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"11039"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"11793"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"12539"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"13279"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"14010"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"14732"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"15446"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"16151"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"16846"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"17530"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"18204"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"18868"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"19519"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20159"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20787"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"21403"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"22005"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"22594"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"23170"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"23731"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"24279"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"24811"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"25329"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"25832"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"26319"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"26790"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"27245"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"27683"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"28105"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"28510"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"28898"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"29268"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"29621"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"29956"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"30273"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"30571"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"30852"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"31113"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"31356"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"31580"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"31785"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"31971"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32137"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32285"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32412"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32521"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32609"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32678"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32728"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32757"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"32767"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int32_t"),s(" t1"),n("span",{class:"token punctuation"},","),s(" t2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"uint16_t"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint32_t"),n("span",{class:"token punctuation"},")"),s("a "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"64"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"256"),s(),n("span",{class:"token operator"},"/"),s(" _2PI_"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"uint16_t"),s(" frac "),n("span",{class:"token operator"},"="),s(" i "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token number"},"0xff"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token number"},"0xff"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"64"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        t1 "),n("span",{class:"token operator"},"="),s(" sine_array"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        t2 "),n("span",{class:"token operator"},"="),s(" sine_array"),n("span",{class:"token punctuation"},"["),s("i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"128"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        t1 "),n("span",{class:"token operator"},"="),s(" sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"128"),s(),n("span",{class:"token operator"},"-"),s(" i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        t2 "),n("span",{class:"token operator"},"="),s(" sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"128"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"192"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// 因为-((uint16_t)0)会计算错误 所以要写成-((int32_t)(uint16_t)0)")]),s(`
`),n("span",{class:"line"},[s("        t1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"128"),s(),n("span",{class:"token operator"},"+"),s(" i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        t2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"128"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        t1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"256"),s(),n("span",{class:"token operator"},"-"),s(" i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        t2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int32_t"),n("span",{class:"token punctuation"},")"),s("sine_array"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"256"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("t1 "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("t2 "),n("span",{class:"token operator"},"-"),s(" t1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"*"),s(" frac "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"256"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"__attribute__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("weak"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token function"},"_cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// _cos和sin相位差90°，所以加上PI/2")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 防止溢出所以使用uint32_t")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"uint32_t"),s(" a_sin "),n("span",{class:"token operator"},"="),s(" a "),n("span",{class:"token operator"},"+"),s(" _PI_2_"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    a_sin "),n("span",{class:"token operator"},"="),s(" a_sin "),n("span",{class:"token operator"},">"),s(" _2PI_ "),n("span",{class:"token operator"},"?"),s(" a_sin "),n("span",{class:"token operator"},"-"),s(" _2PI_ "),n("span",{class:"token operator"},":"),s(" a_sin"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"_sin"),n("span",{class:"token punctuation"},"("),s("a_sin"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"__attribute__"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("weak"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"_sincos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token operator"},"*"),s("s"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token operator"},"*"),s("c"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token operator"},"*"),s("s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"_sin"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token operator"},"*"),s("c "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"_cos"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifndef"),s(),n("span",{class:"token expression"},"__FOC_UTILS_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"__FOC_UTILS_H__")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<stdint.h>")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},'"typedef.h"')])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifdef"),s(),n("span",{class:"token expression"},"__cplusplus")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"extern"),s(),n("span",{class:"token string"},'"C"')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"/**"),s(`
`),n("span",{class:"line"},"     * 定点数计算sin"),s(`
`),n("span",{class:"line"},"     * @param a uint16_t [0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549°"),s(`
`),n("span",{class:"line"},"     * @return int16_t [-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305"),s(`
`),n("span",{class:"line"},"     */")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token function"},"_sin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token function"},"_cos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"_sincos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"uint16_t"),s(" a"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token operator"},"*"),s("s"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int16_t"),s(),n("span",{class:"token operator"},"*"),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"ifdef"),s(),n("span",{class:"token expression"},"__cplusplus")])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"endif")])]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp","data-title":"cpp"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// 单位1 32767")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_INT16_ONE_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"32767")])])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 单位PI 180°")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_PI_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"32767")])])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 360°")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_2PI_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"65535")])])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 90°")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_PI_2_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"16383")])])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 180°")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_PI_4_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"16383")])])]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// -90°=270°")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name"},"_3_PI_2_"),s(),n("span",{class:"token expression"},[n("span",{class:"token number"},"16383")])])]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=p('<h3 id="实现效果" tabindex="-1"><a class="header-anchor" href="#实现效果"><span>实现效果</span></a></h3><p><img src="'+k+`" alt="alt text"></p><p><code>01.sin_and_cos.ino</code></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;foc_utils.h&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;typedef.h&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uint16_t</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  a <span class="token operator">+=</span> <span class="token number">1500</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> _2PI_<span class="token punctuation">)</span> a <span class="token operator">-=</span> _2PI_<span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">_sin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">_cos</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="浮点数运算与定点数运算的耗时对比" tabindex="-1"><a class="header-anchor" href="#浮点数运算与定点数运算的耗时对比"><span>浮点数运算与定点数运算的耗时对比</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Times</span> <span class="token expression"><span class="token number">10000</span></span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">testUint32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">uint32_t</span> t1 <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t2<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">uint32_t</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">uint32_t</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> Times<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    temp <span class="token operator">+=</span> <span class="token number">1234567</span><span class="token punctuation">;</span> <span class="token comment">// 防止编译器优化</span></span>
<span class="line">    temp <span class="token operator">*=</span> <span class="token number">1234567</span><span class="token punctuation">;</span> <span class="token comment">// 防止编译器优化</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  t2 <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;uint32_t:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 防止编译器优化</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">/</span> Times<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;us&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">testFloat32</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">uint32_t</span> t1 <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t2<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">float</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">uint32_t</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> Times<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    temp <span class="token operator">+=</span> <span class="token number">0.001234f</span><span class="token punctuation">;</span> <span class="token comment">// 防止编译器优化</span></span>
<span class="line">    temp <span class="token operator">*=</span> <span class="token number">1.001234f</span><span class="token punctuation">;</span> <span class="token comment">// 防止编译器优化</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  t2 <span class="token operator">=</span> <span class="token function">micros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;float:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 防止编译器优化</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token char">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">/</span> Times<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;us&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">testUint32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">testFloat32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出结果</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token number">11</span>:18:20.188 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:20.397 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:20.434 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:20.630 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:20.708 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:20.877 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:20.950 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:21.119 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:21.196 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:21.372 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:21.449 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:21.614 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:21.691 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:21.864 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:21.937 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:22.126 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"><span class="token number">11</span>:18:22.162 -<span class="token operator">&gt;</span> uint32_t:2763457473,5.80us</span>
<span class="line"><span class="token number">11</span>:18:22.375 -<span class="token operator">&gt;</span> float:454365.65,18.69us</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结论</strong></p><ul><li>在8位、16Mhz主频、无FPU浮点数计算单元的单片机上 <ul><li>Arduino UNO R3 （ATmega328P）</li></ul></li><li>浮点数运算耗时大约是定点数耗时的3倍。</li></ul>`,10);function w(E,A){const c=u("CodeTabs");return r(),l("div",null,[m,i(c,{id:"52",data:[{id:"<code v-pre>foc_utils.c</code>"},{id:"<code v-pre>foc_utils.h</code>"},{id:"<code v-pre>typedef.h</code>"}]},{title0:a(({value:t,isActive:e})=>[v]),title1:a(({value:t,isActive:e})=>[b]),title2:a(({value:t,isActive:e})=>[_]),tab0:a(({value:t,isActive:e})=>[h]),tab1:a(({value:t,isActive:e})=>[y]),tab2:a(({value:t,isActive:e})=>[f]),_:1}),g])}const B=o(d,[["render",w],["__file","01.使用定点数查表法计算三角函数.html.vue"]]),P=JSON.parse('{"path":"/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/01.%E4%BD%BF%E7%94%A8%E5%AE%9A%E7%82%B9%E6%95%B0%E6%9F%A5%E8%A1%A8%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0.html","title":"01.使用定点数查表法计算三角函数","lang":"zh-CN","frontmatter":{"title":"01.使用定点数查表法计算三角函数","date":"2024-09-16T02:30:00.000Z","index":true,"article":false,"order":1,"description":"01.使用定点数查表法计算三角函数 返回值 类型: int16_t 映射关系：[-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305 角度 类型: uint16_t 映射关系：[0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549° 具体实现 实现效果 alt text 01.s...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E7%94%B5%E5%AD%90/FOC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/01.%E4%BD%BF%E7%94%A8%E5%AE%9A%E7%82%B9%E6%95%B0%E6%9F%A5%E8%A1%A8%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"01.使用定点数查表法计算三角函数"}],["meta",{"property":"og:description","content":"01.使用定点数查表法计算三角函数 返回值 类型: int16_t 映射关系：[-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305 角度 类型: uint16_t 映射关系：[0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549° 具体实现 实现效果 alt text 01.s..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-02T13:46:49.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-09-16T02:30:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T13:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"01.使用定点数查表法计算三角函数\\",\\"description\\":\\"01.使用定点数查表法计算三角函数 返回值 类型: int16_t 映射关系：[-32768,32767] 表示 [-1,1] 精度：1/32768 = 0.0000305 角度 类型: uint16_t 映射关系：[0,65535] 表示 [0,2PI] 精度：360°/65535 = 0.00549° 具体实现 实现效果 alt text 01.s...\\"}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"01.使用定点数查表法计算三角函数","slug":"_01-使用定点数查表法计算三角函数","link":"#_01-使用定点数查表法计算三角函数","children":[{"level":3,"title":"具体实现","slug":"具体实现","link":"#具体实现","children":[]},{"level":3,"title":"实现效果","slug":"实现效果","link":"#实现效果","children":[]},{"level":3,"title":"浮点数运算与定点数运算的耗时对比","slug":"浮点数运算与定点数运算的耗时对比","link":"#浮点数运算与定点数运算的耗时对比","children":[]}]}],"git":{"createdTime":1726706103000,"updatedTime":1733147209000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":5}]},"readingTime":{"minutes":1.43,"words":428},"filePathRelative":"电子/FOC算法实现过程记录/01.使用定点数查表法计算三角函数.md","localizedDate":"2024年9月16日","excerpt":"","autoDesc":true}');export{B as comp,P as data};
