import{_ as n,c as s,o as a,b as t}from"./app-DjDtDPYL.js";const p="/assets/image-DN_dkfzG.png",e={},o=t(`<h1 id="web-rtc学习笔记" tabindex="-1"><a class="header-anchor" href="#web-rtc学习笔记"><span>web-rtc学习笔记</span></a></h1><h2 id="webrtc通信原理" tabindex="-1"><a class="header-anchor" href="#webrtc通信原理"><span>WebRTC通信原理</span></a></h2><p>WebRTC（Web Real-Time Communication）是一个支持浏览器之间实时通信的技术框架。<br> 它允许在用户的浏览器中直接进行音视频聊天或数据共享，无需安装任何插件。</p><ul><li><strong>建立连接</strong>：WebRTC使用一种称为PeerConnection的API来创建和管理点对点的连接。</li><li><strong>媒体处理</strong>：通过getUserMedia API获取用户的音频和视频流。</li><li><strong>数据传输</strong>：通过DataChannels进行文本、二进制数据等非媒体信息的传输。</li><li><strong>信令交换</strong>：为了建立连接，需要通过信令服务器交换一些必要的信息，如SDP描述和ICE候选信息。</li></ul><h2 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念"><span>相关概念</span></a></h2><ul><li><strong>SDP (Session Description Protocol)</strong>: 是一个用于描述多媒体会话的格式化文本协议。在WebRTC中，SDP描述了会话的媒体类型（音频、视频）、编码方式、端口信息等。</li><li><strong>ICE (Interactive Connectivity Establishment)</strong>: 是一种网络穿透技术，用于解决NAT穿越问题，确保不同网络环境下的设备能够互相通信。</li><li><strong>Candidate</strong>: ICE候选是潜在的网络接口和端口组合，可以用来建立点对点连接。通常包括主机候选、反射候选、中继候选等。</li><li><strong>Offer/Answer</strong>: 在WebRTC中，两个Peer之间需要通过Offer和Answer的方式来协商连接参数。发起方发送一个包含其SDP描述的Offer给接收方，接收方根据Offer生成自己的SDP描述并返回Answer，双方以此完成连接的建立。</li><li><strong>信令服务器</strong>：在WebRTC通信中并不直接参与媒体流的传输，它的主要作用是在两个Peer之间传递必要的控制信息，比如SDP描述和ICE候选信息。这通常是通过WebSocket、XMPP或其他实时通信协议实现的。</li></ul><p>WebRTC通过一系列的协议和技术实现在浏览器之间的直接通信，<br> 而信令服务器则负责帮助双方协商出连接所需的参数，从而建立起通信通道。</p><h2 id="webrtc建立连接的流程" tabindex="-1"><a class="header-anchor" href="#webrtc建立连接的流程"><span>WebRTC建立连接的流程</span></a></h2><p>WebRTC建立连接的过程涉及到多个步骤，主要包括信令交换和媒体流传输（数据流）两大部分。</p><h3 id="简单总结" tabindex="-1"><a class="header-anchor" href="#简单总结"><span>简单总结</span></a></h3><ol><li>交换offer/answer</li><li>交换iceCandidata</li><li>建立音视频通信或字节通信。</li></ol><h3 id="详细流程" tabindex="-1"><a class="header-anchor" href="#详细流程"><span>详细流程</span></a></h3><p>下面是一个典型的WebRTC连接建立的详细流程：</p><ol><li><p><strong>初始化PeerConnection对象</strong>:</p><ul><li>创建<code>RTCPeerConnection</code>实例，这是WebRTC的核心组件，用于建立和维护点对点连接。</li></ul></li><li><p><strong>设置媒体流</strong>:</p><ul><li>使用<code>getUserMedia()</code>API获取本地媒体流（例如摄像头和麦克风的输出）。</li><li>将本地媒体流添加到<code>RTCPeerConnection</code>实例中。</li></ul></li><li><p><strong>创建Offer</strong>:</p><ul><li>调用<code>createOffer()</code>方法来生成一个包含本地媒体流描述的SDP（Session Description Protocol）描述。</li><li>使用<code>setLocalDescription()</code>方法设置本地描述。</li></ul></li><li><p><strong>发送Offer</strong>:</p><ul><li>通过信令服务器将Offer SDP发送给远程端。信令服务器可以是WebSocket、XMPP或任何其他支持实时消息传递的服务。</li></ul></li><li><p><strong>接收Offer</strong>:</p><ul><li>远程端接收到Offer SDP。</li></ul></li><li><p><strong>创建Answer</strong>:</p><ul><li>远程端使用<code>createAnswer()</code>方法生成一个包含其媒体流描述的SDP描述。</li><li>使用<code>setLocalDescription()</code>方法设置远程端的本地描述。</li></ul></li><li><p><strong>发送Answer</strong>:</p><ul><li>通过信令服务器将Answer SDP发送回发起端。</li></ul></li><li><p><strong>接收Answer</strong>:</p><ul><li>发起端接收到Answer SDP。</li></ul></li><li><p><strong>设置远程描述</strong>:</p><ul><li>在两端分别使用<code>setRemoteDescription()</code>方法设置对方的描述。 <ul><li>发起端设置远程端的Answer SDP。</li><li>远程端设置发起端的Offer SDP。</li></ul></li></ul></li><li><p><strong>ICE候选交换</strong>:</p><ul><li>当<code>RTCPeerConnection</code>发现新的ICE候选时，它会触发<code>icecandidate</code>事件。</li><li>每个端通过信令服务器将ICE候选信息发送给对方。</li><li>对方接收到ICE候选后，将其添加到其<code>RTCPeerConnection</code>实例中。</li></ul></li><li><p><strong>连接建立</strong>:</p><ul><li>当ICE候选交换完成后，连接建立成功，两端可以开始交换媒体流。</li></ul></li><li><p><strong>媒体流传输</strong>:</p><ul><li>一旦连接建立，媒体流就可以直接在两端之间传输，无需通过服务器中转。</li></ul></li><li><p><strong>关闭连接</strong>:</p><ul><li>当不再需要连接时，可以通过关闭<code>RTCPeerConnection</code>来结束会话。</li></ul></li></ol><p>这个流程中的关键部分是通过信令服务器进行的Offer/Answer交换以及ICE候选的收集与交换。这些步骤确保了两个端点能够正确地协商它们之间的连接参数，并建立一个高质量的实时通信连接。</p><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h2><h3 id="信令服务器——服务端代码实现" tabindex="-1"><a class="header-anchor" href="#信令服务器——服务端代码实现"><span>信令服务器——服务端代码实现</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Server <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;socket.io&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> httpServer <span class="token operator">=</span> <span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> io <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Server</span><span class="token punctuation">(</span>httpServer<span class="token punctuation">,</span> <span class="token punctuation">{</span> cors<span class="token operator">:</span> <span class="token punctuation">{</span> origin<span class="token operator">:</span> <span class="token string">&quot;*&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> addr <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">io<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;/signaling&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;connection&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>socket<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>offer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> socket<span class="token punctuation">.</span>broadcast<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> offer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>answer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> socket<span class="token punctuation">.</span>broadcast<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>icecandidate<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> socket<span class="token punctuation">.</span>broadcast<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> icecandidate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">httpServer<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">server is running at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>addr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="信令服务器——客户端代码实现" tabindex="-1"><a class="header-anchor" href="#信令服务器——客户端代码实现"><span>信令服务器——客户端代码实现</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> EventEmitter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;node:events&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Socket<span class="token punctuation">,</span> Manager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;socket.io-client&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Events</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  offer<span class="token operator">:</span> <span class="token punctuation">[</span>RTCSessionDescriptionInit<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  answer<span class="token operator">:</span> <span class="token punctuation">[</span>RTCSessionDescriptionInit<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  icecandidate<span class="token operator">:</span> <span class="token punctuation">[</span>RTCIceCandidate<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SignalingChannel</span> <span class="token keyword">extends</span> <span class="token class-name">EventEmitter<span class="token operator">&lt;</span>Events<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  socket<span class="token operator">:</span> Socket<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span>web_socket_manager<span class="token operator">:</span> Manager<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket <span class="token operator">=</span> web_socket_manager<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token string">&quot;/signaling&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>offer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> offer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>answer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>icecandidate<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> icecandidate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">sendOffer</span><span class="token punctuation">(</span>offer<span class="token operator">:</span> RTCSessionDescriptionInit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> offer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">sendAnswer</span><span class="token punctuation">(</span>answer<span class="token operator">:</span> RTCSessionDescriptionInit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">sendIceCandidate</span><span class="token punctuation">(</span>icecandidate<span class="token operator">:</span> RTCIceCandidate<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> icecandidate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="webrtcsocket代码实现" tabindex="-1"><a class="header-anchor" href="#webrtcsocket代码实现"><span>WebRTCSocket代码实现</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> EventEmitter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;node:events&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Events</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  open<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  data<span class="token operator">:</span> <span class="token punctuation">[</span>Buffer<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  close<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Socket</span> <span class="token keyword">extends</span> <span class="token class-name">EventEmitter<span class="token operator">&lt;</span>Events<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">abstract</span> <span class="token function">write</span><span class="token punctuation">(</span>data<span class="token operator">:</span> Buffer<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Socket <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../type/socket&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> SignalingChannel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./signaling-channel&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WebRTCSocket</span> <span class="token keyword">extends</span> <span class="token class-name">Socket</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> peerConnection<span class="token operator">:</span> RTCPeerConnection<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> dataChannel<span class="token operator">?</span><span class="token operator">:</span> RTCDataChannel<span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">private</span> initiator<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">private</span> signalingChannel<span class="token operator">:</span> SignalingChannel<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ######################################################################################</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCPeerConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ######################################################################################</span></span>
<span class="line">    <span class="token comment">// 接收并保存offer 然后发送answer</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>offer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> remoteDesc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCSessionDescription</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span>remoteDesc<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 接收并保存answer</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>answer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> remoteDesc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCSessionDescription</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span>remoteDesc<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ######################################################################################</span></span>
<span class="line">    <span class="token comment">// 接收并保存iceCandidate</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>icecandidate<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">addIceCandidate</span><span class="token punctuation">(</span>icecandidate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 监听和发送iceCandidate</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;icecandidate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>candidate<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">sendIceCandidate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ######################################################################################</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>initiator<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 发起方创建数据通道并发起邀约</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setUpDataChannel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">createDataChannel</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendOffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 接收方等待数据通道</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;datachannel&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setUpDataChannel</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 回复邀约</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">sendAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">sendAnswer</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 发送邀约</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">sendOffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> offer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">createOffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>peerConnection<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>signalingChannel<span class="token punctuation">.</span><span class="token function">sendOffer</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">setUpDataChannel</span><span class="token punctuation">(</span>dataChannel<span class="token operator">:</span> RTCDataChannel<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel <span class="token operator">=</span> dataChannel<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">write</span><span class="token punctuation">(</span>data<span class="token operator">:</span> ArrayBuffer<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;链接尚未建立!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>dataChannel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端代码实现" tabindex="-1"><a class="header-anchor" href="#前端代码实现"><span>前端代码实现</span></a></h3><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Manager <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;socket.io-client&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> WebRTCSocket <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./lib/socket/web-rtc-socket&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> SignalingChannel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./lib/socket/signaling-channel&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Buffer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;node:buffer&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> open <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> messages <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> webSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Manager</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:8080&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> signalingChannel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SignalingChannel</span><span class="token punctuation">(</span>webSocket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> <span class="token literal-property property">webRtcSocket</span><span class="token operator">:</span> WebRTCSocket<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">initiator</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  webRtcSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebRTCSocket</span><span class="token punctuation">(</span>initiator<span class="token punctuation">,</span> signalingChannel<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  webRtcSocket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>open<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  webRtcSocket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>open<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  webRtcSocket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> messages<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  webRtcSocket<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  temp<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>连接状态：{{ open }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>收到消息：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in messages<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ Buffer.from(item) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>() =&gt; init(true)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发起连接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>() =&gt; init(false)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>等待连接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>temp<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>send<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发送消息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"><span class="token selector">.wrapper</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid gray<span class="token punctuation">;</span></span>
<span class="line">  <span class="token selector">.content</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">min-height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">.bottom</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实现效果" tabindex="-1"><a class="header-anchor" href="#实现效果"><span>实现效果</span></a></h3><p><img src="`+p+'" alt="Alt text"></p>',27),c=[o];function l(i,u){return a(),s("div",null,c)}const r=n(e,[["render",l],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF/web-rtc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"web-rtc学习笔记：通过DataChannel实现二进制数据流的传输","lang":"zh-CN","frontmatter":{"title":"web-rtc学习笔记：通过DataChannel实现二进制数据流的传输","date":"2024-08-01T22:58:00.000Z","description":"web-rtc学习笔记 WebRTC通信原理 WebRTC（Web Real-Time Communication）是一个支持浏览器之间实时通信的技术框架。 它允许在用户的浏览器中直接进行音视频聊天或数据共享，无需安装任何插件。 建立连接：WebRTC使用一种称为PeerConnection的API来创建和管理点对点的连接。 媒体处理：通过getUse...","head":[["meta",{"property":"og:url","content":"https://dingdingdang.online/%E5%90%8E%E7%AB%AF/web-rtc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],["meta",{"property":"og:site_name","content":"YiguiDing的Blog小站"}],["meta",{"property":"og:title","content":"web-rtc学习笔记：通过DataChannel实现二进制数据流的传输"}],["meta",{"property":"og:description","content":"web-rtc学习笔记 WebRTC通信原理 WebRTC（Web Real-Time Communication）是一个支持浏览器之间实时通信的技术框架。 它允许在用户的浏览器中直接进行音视频聊天或数据共享，无需安装任何插件。 建立连接：WebRTC使用一种称为PeerConnection的API来创建和管理点对点的连接。 媒体处理：通过getUse..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-01T15:03:13.000Z"}],["meta",{"property":"article:author","content":"丁毅桂"}],["meta",{"property":"article:published_time","content":"2024-08-01T22:58:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-01T15:03:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"web-rtc学习笔记：通过DataChannel实现二进制数据流的传输\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-01T22:58:00.000Z\\",\\"dateModified\\":\\"2024-08-01T15:03:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"丁毅桂\\",\\"email\\":\\"2449695354@qq.com\\"}]}"],["meta",{"name":"baidu-site-verification","content":"codeva-PwE9Ts6nMl"}]]},"headers":[{"level":2,"title":"WebRTC通信原理","slug":"webrtc通信原理","link":"#webrtc通信原理","children":[]},{"level":2,"title":"相关概念","slug":"相关概念","link":"#相关概念","children":[]},{"level":2,"title":"WebRTC建立连接的流程","slug":"webrtc建立连接的流程","link":"#webrtc建立连接的流程","children":[{"level":3,"title":"简单总结","slug":"简单总结","link":"#简单总结","children":[]},{"level":3,"title":"详细流程","slug":"详细流程","link":"#详细流程","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[{"level":3,"title":"信令服务器——服务端代码实现","slug":"信令服务器——服务端代码实现","link":"#信令服务器——服务端代码实现","children":[]},{"level":3,"title":"信令服务器——客户端代码实现","slug":"信令服务器——客户端代码实现","link":"#信令服务器——客户端代码实现","children":[]},{"level":3,"title":"WebRTCSocket代码实现","slug":"webrtcsocket代码实现","link":"#webrtcsocket代码实现","children":[]},{"level":3,"title":"前端代码实现","slug":"前端代码实现","link":"#前端代码实现","children":[]},{"level":3,"title":"实现效果","slug":"实现效果","link":"#实现效果","children":[]}]}],"git":{"createdTime":1722524593000,"updatedTime":1722524593000,"contributors":[{"name":"YiguiDing","email":"2449695354@qq.com","commits":1}]},"readingTime":{"minutes":5.92,"words":1775},"filePathRelative":"后端/web-rtc学习笔记/index.md","localizedDate":"2024年8月1日","excerpt":"","autoDesc":true}');export{r as comp,d as data};
